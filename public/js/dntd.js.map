{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"m\"","webpack:///./src/controllers/index.ts","webpack:///./src/types/index.ts","webpack:///./src/index.ts","webpack:///./src/errors/index.ts","webpack:///./src/factories/index.ts","webpack:///./src/components/index.ts","webpack:///./src/models/index.ts","webpack:///./src/types/search.ts","webpack:///./src/types/testing.ts","webpack:///./src/types/syncer.ts","webpack:///./src/errors/SyncerError.ts","webpack:///./src/errors/FriendlyError.ts","webpack:///./src/controllers/urlController.ts","webpack:///./src/controllers/entryController.ts","webpack:///./src/models/SearchModel.ts","webpack:///./src/controllers/syncerController.ts","webpack:///./src/views/index.ts","webpack:///./src/views/shelfView.ts","webpack:///./src/components/graphComponent.ts","webpack:///external \"cytoscape\"","webpack:///./src/controllers/textController.ts","webpack:///./src/factories/tagFactory.ts","webpack:///./src/models/UrlModel.ts","webpack:///./src/models/TagModel.ts","webpack:///./src/models/EntryModel.ts","webpack:///./src/models/ShelfModel.ts","webpack:///./src/models/SyncerModel.ts","webpack:///./src/models/GoogleModel.ts","webpack:///./src/models/ErrorsModel.ts","webpack:///./src/models/JournalModel.ts","webpack:///./src/models/LibraryModel.ts","webpack:///./src/models/AppStateModel.ts","webpack:///./src/models/ServiceWorkerModel.ts","webpack:///./src/factories/shelfFactory.ts","webpack:///./src/factories/entryFactory.ts","webpack:///./src/controllers/caretController.ts","webpack:///./src/controllers/searchController.ts","webpack:///./src/controllers/googleController.ts","webpack:///./src/mocks/index.ts","webpack:///./src/mocks/Gapi.ts","webpack:///./src/controllers/errorsController.ts","webpack:///./src/controllers/libraryController.ts","webpack:///./src/controllers/journalController.ts","webpack:///./src/controllers/appStateController.ts","webpack:///./src/components/googleComponent.ts","webpack:///./src/components/errorsComponent.ts","webpack:///./src/components/composeComponent.ts","webpack:///./src/components/entriesComponent.ts","webpack:///./src/components/shelvesComponent.ts","webpack:///./src/components/refinesComponent.ts","webpack:///./src/components/testModeComponent.ts","webpack:///./src/components/journalsComponent.ts","webpack:///./src/components/syncStateComponent.ts","webpack:///./src/components/searchbarComponent.ts","webpack:///./src/components/addShelvesComponent.ts","webpack:///./src/components/breadcrumbComponent.ts","webpack:///./src/views/graphView.ts","webpack:///./src/views/signinView.ts","webpack:///./src/views/libraryView.ts","webpack:///./src/views/journalView.ts","webpack:///./src/views/testModeView.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","errorsModel","ErrorsModel","getInstance","appStateModel","AppStateModel","serviceWorkerModel","ServiceWorkerModel","googleModel","GoogleModel","syncerModel","SyncerModel","libraryModel","LibraryModel","urlModel","UrlModel","searchModel","SearchModel","root","document","getElementById","route","signinView","testModeView","libraryView","shelfView","journalView","graphView","SearchType","TestMode","str","values","includes","SyncerPayloadType","SyncerResponseType","SyncerState","SyncerError","Error","errorMsg","friendlyMsg","needsReAuth","pause","rejects","super","this","payload","undefined","error","type","ERROR","FriendlyError","msg","getActiveShelf","id","shelfId","shelves","urlController","redirect","hash","getActiveJournal","journalId","shelf","journals","getBreadcrumbTrail","breadcrumb","split","filter","crumb","length","trail","slice","join","title","parseInt","push","href","replace","tagPattern","entryController","save","entry","content","saved","savedClean","textController","clean","tags","tagMatches","Map","tag","has","frq","set","getTags","update","raw","safe","escape","tokens","text","token","trim","matchesIter","matchAll","match","tagFactory","createTag","sort","a","b","index","getTagMatches","rendered","chars","splice","render","searchType","NONE","simpleRefines","complexRefines","barQuery","entryFactory","createBaseEntry","refinesQuery","keys","Set","vals","simpleKeys","instance","Array","from","worker","Worker","updateAuth","pushSyncerTask","AUTH_UPDATE","onmessage","data","requests","SYNC_STATE","state","redraw","errorsController","add","message","TOKEN_REQUEST","onMessage","syncerController","unpause","UNPAUSE","getRows","journalTitle","GET_ROWS","spreadsheetId","sheetTitle","sheetId","rows","createRow","idx","CREATE_ROW","deleteRow","DELETE_ROW","updateRow","UPDATE_ROW","updateTestMode","testMode","TEST_MODE_UPDATE","getSpreadsheet","GET_SPREADSHEET","spreadsheet","view","googleComponent","testModeComponent","syncStateComponent","errorsComponent","breadcrumbComponent","journalsComponent","journal","cy","headless","selector","style","loaded","oncreate","vnode","target","dom","mount","onupdate","tagNodes","tagEdges","els","nodes","edges","entries","sourceKey","sourceTag","separator","cleanVal","startsWith","source","toLowerCase","targetKey","targetTag","altId","layout","ready","stop","animate","animationEasing","animationDuration","animateFilter","_node","_i","animationThreshold","refresh","fit","padding","boundingBox","nodeDimensionsIncludeLabels","randomize","componentSpacing","nodeRepulsion","nodeOverlap","idealEdgeLength","_edge","edgeElasticity","nestingFactor","gravity","numIter","initialTemp","coolingFactor","minTemp","run","cytoscape","unsafe","cleanTagString","endsWith","substring","flag","val","cleanKey","renderedKey","renderedVal","TagModel","window","location","hash_","URL","url","searchParams","param","BaseEntryModel","entryId","requestsCounter","INITIALIZING","Promise","resolve","reject","delete","postMessage","isSignedIn","src","scope","clientId","user","getAuthResponse","access_token","errors","fromIdx","toIdx","shelfIds","forEach","ids","localStorage","removeItem","setItem","getItem","OFF","navigator","addEventListener","serviceWorker","register","shelfFactory","createShelf","properties","sheets","ShelfModel","sheet","JournalModel","getJournals","entryCounter","createJournalEntry","JournalEntryModel","caretController","getCaretPosition","elem","sel","getSelection","cum_length","anchorNode","innerText","extentNode","nodes_to_find","contains","found","node_walk","node","func","result","firstChild","nextSibling","textContent","anchorOffset","extentOffset","setCaretPosition","el","pos","childNodes","nodeType","range","createRange","setStart","collapse","removeAllRanges","addRange","search","query","sourceEntries","filteredEntries","AND","every","OR","some","searchController","reset","buildRefines","cleanRefines","map","updateSearchbar","signedIn","gapi_","auth2","getAuthInstance","currentUser","libraryController","loadShelves","removeShelves","googleController","signIn","signOut","initGapi","gapi","MockGapi","load","init","client_id","then","listen","MockAuth2","_api","_callback","MockGoogleAuth","_params","MockCurrentUser","MockGoogleUser","expires_in","MockIsSignedIn","console","remove","spreadsheetIdPattern","reloadLoaded","journalController","loadEntries","catch","finally","getSpreadsheetIdsFromUrls","urls","addShelves","addEntry","createEntry","buildTags","reverse","updateEntry","moveEntry","deleteEntry","keepJournal","unloadEntries","appStateController","instanceOfTestMode","onclick","class","async","defer","onload","errorVnode","errorsList","caret","composePrefixEntry","composeContentEntry","composeSuffixEntry","prefixSettings","entrySettings","suffixSettings","composeNodeSettings","extraSettings","baseSettings","contenteditable","onkeydown","event","keyCode","shiftKey","preventDefault","composeKeydown","oninput","composeInput","assign","trust","entriesList","entryIdx","createEntryVnode","entryContent","deleteEntryButton","entryVnode","blur","onEntryKeydown","onEntryInput","onEntryUpdate","onblur","onEntryBlur","entryContentSettings","delShelfButton","retryShelfLoadButton","shelfNode","expanded","simpleRefinesVnodes","size","refineKeyVnode","refineValVnode","count","metaKey","ctrlKey","refineTagKeyOnClick","tagRefineKeySettings","checked","tagRefineValSettings","tagClass","hideClass","refineTagValOnClick","stopDemoButton","DEMO","link","journalList","syncStateText","txt","class_","stateColorClass","DOWNLOADING","PAUSED","SYNCED","UPLOADING","syncStateIcon","unpauseSync","placeholder","onSearchInput","onSearchKeydown","newShelfUrls","addingShelves","addShelvesMessage","addShelvesButton","addShelvesTextbox","graphComponent","oninit","addShelvesComponent","shelvesComponent","searchbarComponent","refinesComponent","entriesComponent","composeComponent","newTestMode"],"mappings":"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","file":"dntd.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = m;","export * from \"./urlController\"\nexport * from \"./textController\"\nexport * from \"./entryController\"\nexport * from \"./caretController\"\nexport * from \"./searchController\"\nexport * from \"./googleController\"\nexport * from \"./syncerController\"\nexport * from \"./errorsController\"\nexport * from \"./libraryController\"\nexport * from \"./journalController\"\nexport * from \"./appStateController\"\n","export * from \"./caret\"\nexport * from \"./search\"\nexport * from \"./testing\"\nexport * from \"./syncer\"\n","import m from \"mithril\"\nimport { signinView, libraryView, shelfView, journalView, testModeView, graphView } from \"./views\"\nimport {\n    ServiceWorkerModel, SyncerModel, LibraryModel, GoogleModel, UrlModel, SearchModel,\n    AppStateModel, ErrorsModel\n} from \"./models\"\n\nexport const errorsModel = ErrorsModel.getInstance()\nexport const appStateModel = AppStateModel.getInstance()\nexport const serviceWorkerModel = ServiceWorkerModel.getInstance()\nexport const googleModel = GoogleModel.getInstance()\nexport const syncerModel = SyncerModel.getInstance()\nexport const libraryModel = LibraryModel.getInstance()\nexport const urlModel = UrlModel.getInstance()\nexport const searchModel = SearchModel.getInstance()\n\nconst root = document.getElementById(\"root\")\n\nif (root !== null) {\n    m.route(root, \"/\", {\n        \"/\": signinView,        // TODO switch to be about page\n        \"/demo\": testModeView,\n        \"/signin\": signinView,\n        \"/library\": libraryView,\n        \"/library/:shelfId\": shelfView,\n        \"/setTestMode/:testMode\": testModeView,\n        \"/library/:shelfId/:journalId\": journalView,\n        \"/library/:shelfId/:journalId/graph\": graphView,\n        \"/demo/:shelfId/:journalId\": journalView,\n    })\n}\n","export * from \"./GapiErrors\"\nexport * from \"./SyncerError\"\nexport * from \"./FriendlyError\"\n","export * from \"./tagFactory\"\nexport * from \"./shelfFactory\"\nexport * from \"./entryFactory\"\n","export * from \"./graphComponent\"\nexport * from \"./googleComponent\"\nexport * from \"./errorsComponent\"\nexport * from \"./composeComponent\"\nexport * from \"./entriesComponent\"\nexport * from \"./shelvesComponent\"\nexport * from \"./refinesComponent\"\nexport * from \"./testModeComponent\"\nexport * from \"./journalsComponent\"\nexport * from \"./syncStateComponent\"\nexport * from \"./searchbarComponent\"\nexport * from \"./addShelvesComponent\"\nexport * from \"./breadcrumbComponent\"","export * from \"./UrlModel\"\nexport * from \"./TagModel\"\nexport * from \"./EntryModel\"\nexport * from \"./ShelfModel\"\nexport * from \"./SyncerModel\"\nexport * from \"./SearchModel\"\nexport * from \"./GoogleModel\"\nexport * from \"./SearchModel\"\nexport * from \"./ErrorsModel\"\nexport * from \"./JournalModel\"\nexport * from \"./LibraryModel\"\nexport * from \"./AppStateModel\"\nexport * from \"./ServiceWorkerModel\"\n","export enum SearchType {\n    NONE,\n    AND,\n    OR,\n}\n","export enum TestMode {\n    OFF = \"0\",\n    WORKING = \"1\",\n    FAIL_GET_SPREADSHEET_SHEETS = \"2\",\n    FAIL_GET_RANGE = \"3\",\n    FAIL_UPDATE_RANGE = \"4\",\n    FAIL_DELETE_ROW = \"5\",\n    RETURN_ROWS = \"6\",\n    DEMO = \"demomode\"\n}\n\nexport function instanceOfTestMode(str: string): str is TestMode {\n    return ((<any>Object).values(TestMode).includes(str))\n}\n","import { TestMode } from \"./testing\"\n\nexport type SyncerPayload = (\n    GetRowsPayload | GetSpreadsheetPayload | UpdateRowPayload |\n    ExtendSheetPayload | DeleteRowPayload | TestModeUpdatePayload |\n    AuthUpdatePayload | UnpausePayload | SyncStatePayload | ErrorPayload |\n    TokenRequestPayload | CreateRowPayload\n)\n\nexport enum SyncerPayloadType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    TEST_MODE_UPDATE,\n    UNPAUSE,\n    GET_SPREADSHEET,\n    EXTEND_SHEET,\n    CREATE_ROW,\n    MOVE_ROW,\n    ERROR,\n    TOKEN_REQUEST,\n    SYNC_STATE,\n}\n\nexport enum SyncerResponseType {\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n    INITIALIZING = \"cloud_queue\",\n}\n\nexport interface TestModeUpdatePayload {\n    type: SyncerPayloadType.TEST_MODE_UPDATE\n    testMode: TestMode\n    rejects: boolean\n}\n\nexport interface AuthUpdatePayload {\n    type: SyncerPayloadType.AUTH_UPDATE\n    token: string\n    rejects: boolean\n}\n\nexport interface UnpausePayload {\n    type: SyncerPayloadType.UNPAUSE\n    rejects: boolean\n}\n\nexport interface DeleteRowPayload {\n    type: SyncerPayloadType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    rejects: boolean\n}\n\nexport interface CreateRowPayload {\n    type: SyncerPayloadType.CREATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    rejects: boolean\n}\n\nexport interface ExtendSheetPayload {\n    type: SyncerPayloadType.EXTEND_SHEET\n    spreadsheetId: string\n    sheetId: number\n    rejects: boolean\n}\n\nexport interface UpdateRowPayload {\n    type: SyncerPayloadType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n    rejects: boolean\n}\n\nexport interface GetSpreadsheetPayload {\n    type: SyncerPayloadType.GET_SPREADSHEET\n    spreadsheetId: string\n    spreadsheet?: gapi.client.sheets.Spreadsheet\n    rejects: boolean\n}\n\nexport interface GetRowsPayload {\n    type: SyncerPayloadType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    rows: string[]\n    rejects: boolean\n}\n\nexport interface SyncStatePayload {\n    type: SyncerPayloadType.SYNC_STATE\n    length: number\n    state: SyncerState\n    rejects: boolean\n}\n\nexport interface ErrorPayload {\n    type: SyncerPayloadType.ERROR\n    error: Error\n    pause: boolean\n    friendlyMsg: string\n    rejects: boolean\n}\n\nexport interface TokenRequestPayload {\n    type: SyncerPayloadType.TOKEN_REQUEST\n    rejects: boolean\n}\n","import { ErrorPayload, SyncerPayloadType } from \"../types\"\n\nexport class SyncerError extends Error {\n    public payload: ErrorPayload\n\n    constructor(errorMsg: string, public friendlyMsg: string, public needsReAuth: boolean, pause?: boolean, rejects?: boolean) {\n        super(errorMsg)\n        this.payload = {\n            pause: (pause !== undefined) ? pause : true,\n            error: this,\n            friendlyMsg: this.friendlyMsg,\n            type: SyncerPayloadType.ERROR,\n            rejects: (rejects !== undefined) ? rejects : false,\n        }\n    }\n}\n","export class FriendlyError extends Error {\n    public msg: string\n    public friendlyMsg: string\n\n    constructor(errorMsg: string, friendlyMsg: string) {\n        super(errorMsg)\n        this.msg = errorMsg\n        this.friendlyMsg = friendlyMsg\n    }\n}\n","import m from \"mithril\"\nimport { libraryModel, urlModel } from \"..\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport const urlController = {\n    redirect: redirect,\n    getActiveShelf: getActiveShelf,\n    getActiveJournal: getActiveJournal,\n    getBreadcrumbTrail: getBreadcrumbTrail,\n}\n\nfunction redirect(hash: string) {\n    urlModel.hash = hash\n}\n\nfunction getActiveShelf(): ShelfModel | undefined {\n    let id = urlModel.shelfId\n    if (id === undefined) return undefined\n    return libraryModel.shelves.get(id)\n}\n\nfunction getActiveJournal(): JournalModel | undefined {\n    let id = urlModel.journalId\n    let shelf = getActiveShelf()\n    if (id === undefined || shelf === undefined) return undefined\n    return shelf.journals.get(id)\n}\n\nfunction getBreadcrumbTrail() {\n    let breadcrumb: m.Vnode[] = []\n    let hash = urlModel.hash.split(\"?\")[0].split(\"/\").filter(crumb => crumb !== \"#\" && crumb !== \"\")\n    let shelfId: string | undefined = undefined\n    for (let i = 0; i < hash.length; i++) {\n        let crumb = hash[i]\n        let trail = \"#/\" + hash.slice(0, i + 1).join(\"/\")\n        if (i === 1) {\n            shelfId = crumb\n            crumb = libraryModel.shelves.get(crumb)?.title || crumb\n        } else if (i === 2 && shelfId !== undefined) {\n            crumb = libraryModel.shelves.get(shelfId)?.journals.get(parseInt(crumb))?.title || crumb\n        }\n        if (i !== 0) breadcrumb.push(m(\"span\", \" / \"))\n        if (i === hash.length - 1) {\n            breadcrumb.push(m(\"span\", `${crumb}`))\n        } else {\n            breadcrumb.push(m(\"a\", {\n                href: trail,\n                id: `bc-${trail.replace(\"#\", \"\").replace(\"/\", \"\")}`,\n            }, `${crumb}`))\n        }\n    }\n    return breadcrumb\n}\n","import { textController } from \".\"\nimport { tagFactory } from \"../factories\"\nimport { JournalEntryModel, TagModel, BaseEntryModel } from \"../models\"\n\nconst tagPattern = /(\\@)([\\w-']+)+(:)?([\\w-'\\*]+)?/g\n\nexport const entryController = {\n    save: save,\n    update: update,\n}\n\nfunction save(entry: JournalEntryModel, content: string) {\n    entry.saved = content\n    entry.savedClean = textController.clean(entry.saved)\n    entry.tags = getTags(entry.tagMatches)\n}\n\nfunction update(entry: BaseEntryModel | JournalEntryModel, content: string) {\n    entry.raw = content\n    entry.clean = textController.clean(content)\n    entry.safe = textController.escape(entry.raw)\n    entry.tokens = tokenize(entry.clean)\n    entry.tagMatches = getTagMatches(entry.safe)\n    entry.rendered = render(entry.safe, entry.tagMatches)\n}\n\nfunction render(text: string, tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): string {\n    for (let { tag, match } of tagMatches) {\n        let chars = text.split(\"\")\n        chars.splice(match.index!, match[0].length, tag.rendered)\n        text = chars.join(\"\")\n    }\n    return text\n}\n\nfunction getTags(tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): Map<string, TagModel> {\n    let tags: Map<string, TagModel> = new Map()\n    for (let { tag } of tagMatches) {\n        if (tags.has(tag.clean)) {\n            tags.get(tag.clean)!.frq += 1\n        } else {\n            tags.set(tag.clean, tag)\n        }\n    }\n    return tags\n}\n\nfunction getTagMatches(text: string): { tag: TagModel, match: RegExpMatchArray }[] {\n    let tagMatches = []\n    let matchesIter = text.matchAll(tagPattern)\n    for (let match of matchesIter) {\n        let tag = tagFactory.createTag(match[0], match[1], match[2], match[3], match[4])\n        tagMatches.push({ tag: tag, match: match })\n    }\n    tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\n    return tagMatches\n}\n\nfunction tokenize(text: string): string[] {\n    let tokens = text.split(\" \")\n    return tokens.filter(token => {\n        return token !== undefined && token.trim() !== \"\" && token !== \"-\"\n    })\n}\n","import { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { TagModel, BaseEntryModel } from \".\"\n\nexport class SearchModel {\n    private static instance: SearchModel\n\n    public searchType: SearchType = SearchType.NONE\n    public simpleRefines: Map<string, TagModel> = new Map()\n    public complexRefines: Map<string, TagModel[]> = new Map()\n    public barQuery: BaseEntryModel = entryFactory.createBaseEntry()\n    public refinesQuery: {\n        keys: Set<string>,\n        vals: Map<string, TagModel>,\n        simpleKeys: Map<string, TagModel>\n    } = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n\n    private constructor() { }\n\n    static getInstance(): SearchModel {\n        return (!SearchModel.instance) ? new SearchModel() : SearchModel.instance\n    }\n\n    get query(): BaseEntryModel {\n        return entryFactory.createBaseEntry([\n            this.barQuery.raw,\n            ...Array.from(this.refinesQuery.keys.values()),\n            ...Array.from(this.refinesQuery.vals.keys()),\n            ...Array.from(this.refinesQuery.simpleKeys.keys())\n        ].join(\" \"))\n    }\n}\n","import m from \"mithril\"\nimport { errorsController } from \".\"\nimport { googleModel, syncerModel } from \"..\"\nimport { SyncerPayloadType, TestMode, SyncerPayload, ErrorPayload } from \"../types\"\n\nconst worker = new Worker(\"./js/syncWebWorker.js\")\nworker.onmessage = (msg: MessageEvent) => onMessage(msg)\n\nexport const syncerController = {\n    unpause: unpause,\n    getRows: getRows,\n    createRow: createRow,\n    deleteRow: deleteRow,\n    updateRow: updateRow,\n    updateAuth: updateAuth,\n    updateTestMode: updateTestMode,\n    getSpreadsheet: getSpreadsheet,\n}\n\nasync function updateTestMode(testMode: TestMode) {\n    return await syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.TEST_MODE_UPDATE,\n        testMode: testMode,\n        rejects: false,\n    }, worker)\n}\n\nfunction updateAuth(token: string | undefined) {\n    if (token === undefined) return\n    return syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.AUTH_UPDATE,\n        token: token,\n        rejects: false,\n    }, worker)\n}\n\nfunction getSpreadsheet(spreadsheetId: string) {\n    let spreadsheet: gapi.client.sheets.Spreadsheet | undefined = undefined\n    return syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.GET_SPREADSHEET,\n        spreadsheetId: spreadsheetId,\n        spreadsheet: spreadsheet,\n        rejects: true,\n    }, worker)\n}\n\nasync function createRow(shelfId: string, journalId: number, idx: number) {\n    return await syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.CREATE_ROW,\n        spreadsheetId: shelfId,\n        sheetId: journalId,\n        idx: idx,\n        rejects: false,\n    }, worker)\n}\n\nfunction getRows(shelfId: string, journalId: number, journalTitle: string) {\n    let rows: string[] = []\n    return syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.GET_ROWS,\n        spreadsheetId: shelfId,\n        sheetTitle: journalTitle,\n        sheetId: journalId,\n        rows: rows,\n        rejects: true,\n    }, worker)\n}\n\nasync function updateRow(shelfId: string, journalId: number, journalTitle: string, idx: number, content: string) {\n    return await syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.UPDATE_ROW,\n        spreadsheetId: shelfId,\n        sheetTitle: journalTitle,\n        sheetId: journalId,\n        content: content,\n        idx: idx,\n        rejects: false,\n    }, worker)\n}\n\nasync function deleteRow(shelfId: string, journalId: number, idx: number) {\n    return await syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.DELETE_ROW,\n        spreadsheetId: shelfId,\n        sheetId: journalId,\n        idx: idx,\n        rejects: false,\n    }, worker)\n}\n\n// TODO - NICE TO HAVE\n// async function moveRow() {}\n\nasync function unpause() {\n    return await syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.UNPAUSE,\n        rejects: false,\n    }, worker)\n}\n\nfunction onMessage(msg: MessageEvent) {\n    let { id, payload, error }: { id: string | null, payload: SyncerPayload, error: ErrorPayload } = msg.data\n    if (id !== null && syncerModel.requests.has(id)) {\n        syncerModel.requests.get(id)!({ payload, error })\n    } else if (payload !== undefined) {\n        switch (payload.type) {\n            case SyncerPayloadType.SYNC_STATE:\n                syncerModel.state = payload.state\n                m.redraw()\n                break\n            case SyncerPayloadType.ERROR:\n                errorsController.add(payload.error.message, payload.friendlyMsg)\n                break\n            case SyncerPayloadType.TOKEN_REQUEST:\n                updateAuth(googleModel.token)\n                break\n        }\n    } else {\n        errorsController.add(\"undefined payload\", \"An unexpected error occurred.\")\n    }\n}\n","export * from \"./shelfView\"\nexport * from \"./graphView\"\nexport * from \"./signinView\"\nexport * from \"./libraryView\"\nexport * from \"./journalView\"\nexport * from \"./testModeView\"\n","import m from \"mithril\"\nimport {\n    googleComponent, journalsComponent, syncStateComponent, breadcrumbComponent,\n    testModeComponent, errorsComponent\n} from \"../components\"\n\nexport function shelfView() {\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(errorsComponent),\n            m(breadcrumbComponent),\n            m(journalsComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\r\nimport cytoscape from \"cytoscape\"\r\nimport { urlController } from \"../controllers\"\r\nimport { JournalModel } from \"../models\"\r\n\r\nexport function graphComponent() {\r\n    let journal: JournalModel | undefined = undefined\r\n    const cy: cytoscape.Core = cytoscape({ headless: true })\r\n    const s = [\r\n        {\r\n            selector: 'node',\r\n            style: {\r\n                'background-color': '#666',\r\n                'label': 'data(id)'\r\n            }\r\n        },\r\n        {\r\n            selector: 'edge',\r\n            style: {\r\n                'width': 1,\r\n                'line-color': '#ccc',\r\n                'target-arrow-color': '#ccc',\r\n                'target-arrow-shape': 'none',\r\n                'curve-style': 'straight'\r\n            }\r\n        }\r\n    ]\r\n\r\n    function view() {\r\n        if (journal === undefined || journal.loaded === false) return\r\n        return m(\"#graphContainer\", m(\"#graph\", {\r\n            oncreate: vnode => mountGraph(vnode.dom)\r\n        }))\r\n    }\r\n\r\n    function mountGraph(target: Element) {\r\n        if (target !== null) cy.mount(target)\r\n    }\r\n\r\n    function onupdate() {\r\n        let tagNodes: string[] = []\r\n        let tagEdges: string[] = []\r\n        let els: cytoscape.ElementsDefinition = { nodes: [], edges: [] }\r\n\r\n        if (journal === undefined) journal = urlController.getActiveJournal()\r\n        if (journal === undefined || journal?.loaded === false) return\r\n\r\n        for (let entry of journal.entries) {\r\n            for (let [sourceKey, sourceTag] of entry.entry.tags) {\r\n                if (sourceTag.separator === undefined || sourceTag.separator === null) continue\r\n                if (sourceTag.cleanVal === undefined || sourceTag.cleanVal === null) continue\r\n                if (sourceKey.startsWith(\"@session:\")) continue\r\n\r\n                let source = sourceTag.cleanVal.toLowerCase().split(\"_\").join(\" \")\r\n                if (!tagNodes.includes(source)) {\r\n                    tagNodes.push(source)\r\n                    els.nodes.push({ data: { id: source } })\r\n                }\r\n\r\n                for (let [targetKey, targetTag] of entry.entry.tags) {\r\n                    if (targetTag.cleanVal === undefined || targetTag.cleanVal === null) continue\r\n                    if (targetKey.startsWith(\"@session:\")) continue\r\n                    \r\n                    let target = targetTag.cleanVal.toLowerCase().split(\"_\").join(\" \")\r\n                    if (target === source) continue\r\n\r\n                    let id = source + target\r\n                    let altId = target + source\r\n                    if (!tagEdges.includes(id) && !tagEdges.includes(altId)) {\r\n                        tagEdges.push(id)\r\n                        els.edges.push({ data: { id: id, source: source, target: target } })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        cy.add(els.nodes)\r\n        cy.add(els.edges)\r\n        cy.style(s)\r\n        let layout = {\r\n            name: 'cose',\r\n            // Called on `layoutready`\r\n            ready: function () { },\r\n            // Called on `layoutstop`\r\n            stop: function () { },\r\n            // Whether to animate while running the layout\r\n            // true : Animate continuously as the layout is running\r\n            // false : Just show the end result\r\n            // 'end' : Animate with the end result, from the initial positions to the end positions\r\n            animate: false,\r\n            // Easing of the animation for animate:'end'\r\n            animationEasing: undefined,\r\n            // The duration of the animation for animate:'end'\r\n            animationDuration: undefined,\r\n            // A function that determines whether the node should be animated\r\n            // All nodes animated by default on animate enabled\r\n            // Non-animated nodes are positioned immediately when the layout starts\r\n            animateFilter: function (_node: any, _i: any) { return true },\r\n            // The layout animates only after this many milliseconds for animate:true\r\n            // (prevents flashing on fast runs)\r\n            animationThreshold: 250,\r\n            // Number of iterations between consecutive screen positions update\r\n            refresh: 20,\r\n            // Whether to fit the network view after when done\r\n            fit: true,\r\n            // Padding on fit\r\n            padding: 30,\r\n            // Constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\r\n            boundingBox: undefined,\r\n            // Excludes the label when calculating node bounding boxes for the layout algorithm\r\n            nodeDimensionsIncludeLabels: true,\r\n            // Randomize the initial positions of the nodes (true) or use existing positions (false)\r\n            randomize: true,\r\n            // Extra spacing between components in non-compound graphs\r\n            componentSpacing: 50,\r\n            // Node repulsion (non overlapping) multiplier\r\n            nodeRepulsion: function (_node: any) { return 2048 },\r\n            // Node repulsion (overlapping) multiplier\r\n            nodeOverlap: 100,\r\n            // Ideal edge (non nested) length\r\n            idealEdgeLength: function (_edge: any) { return 32 },\r\n            // Divisor to compute edge forces\r\n            edgeElasticity: function (_edge: any) { return 32 },\r\n            // Nesting factor (multiplier) to compute ideal edge length for nested edges\r\n            nestingFactor: 1.2,\r\n            // Gravity force (constant)\r\n            gravity: 1,\r\n            // Maximum number of iterations to perform\r\n            numIter: 1000,\r\n            // Initial temperature (maximum node displacement)\r\n            initialTemp: 1000,\r\n            // Cooling factor (how the temperature is reduced between consecutive iterations\r\n            coolingFactor: 0.99,\r\n            // Lower temperature threshold (below this point the layout will end)\r\n            minTemp: 1.0\r\n        }\r\n        cy.layout(layout).run()\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n        onupdate: onupdate,\r\n    }\r\n}\r\n","module.exports = cytoscape;","export const textController = {\n    escape: escape,\n    clean: clean,\n}\n\nfunction escape(unsafe: string): string {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n}\n\nfunction clean(content: string): string {\n    return content.toLowerCase()\n}\n","import { textController } from \"../controllers\"\nimport { TagModel } from \"../models\"\n\nexport const tagFactory = {\n    createTag: createTag\n}\n\nfunction createTag(raw: string, flag: string, key: string, separator?: string | null, val?: string | null) {\n    separator = (separator !== undefined) ? separator : null\n    val = (val !== undefined) ? val : null\n    let clean = cleanTagString(raw)\n    let cleanKey = cleanTagString(key)\n    let cleanVal = (val !== null) ? cleanTagString(val) : null\n\n    let renderedKey = \"<span onclick=\\\"tagOnClick(event, '\"\n        + flag\n        + cleanKey\n        + ((separator !== null) ? separator : \"\")\n        + \"')\\\" class=\\\"\"\n        + ((separator !== null) ? \"tagKey\" : (val === null) ? \"simpleTag\" : \"roundTagVal\")\n        + \"\\\">\"\n        + flag\n        + key\n        + \"</span>\"\n\n    let renderedVal = \"\"\n\n    if (separator !== undefined && separator !== null) {\n        renderedVal = \"<span onclick=\\\"tagOnClick(event, '\"\n            + flag\n            + cleanKey\n            + separator\n            + ((cleanVal !== null) ? cleanVal.replace(/'/, \"\\\\'\") : \"\")\n            + \"')\\\" class=\\\"tagVal\\\">\"\n            + separator\n            + ((val !== null) ? val : \"\")\n            + \"</span>\"\n    }\n\n    return new TagModel(raw, flag, key, separator, val, clean, cleanKey, cleanVal, renderedKey + renderedVal)\n\n}\n\nfunction cleanTagString(str: string) {\n    str = textController.escape(str)\n    str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\n    str = str.toLowerCase()\n    return str\n}\n","import m from \"mithril\"\n\nexport class UrlModel {\n    private static instance: UrlModel\n\n    private constructor() { }\n\n    static getInstance(): UrlModel {\n        return (!UrlModel.instance) ? new UrlModel() : UrlModel.instance\n    }\n\n    get hash(): string {\n        return window.location.hash\n    }\n    set hash(hash_: string) {\n        window.location.hash = hash_\n    }\n\n    get url(): URL {\n        return new URL(window.location.href)\n    }\n\n    public getParam(key: string): string | undefined {\n        let val = this.url.searchParams.get(key) || m.route.param(key)\n        if (val === \"\") return\n        return val\n    }\n\n    get shelfId(): string | undefined {\n        let id = m.route.param(\"shelfId\")\n        return (id === \"\") ? undefined : id\n    }\n\n    get journalId(): number | undefined {\n        let id = m.route.param(\"journalId\")\n        return (id === \"\") ? undefined : parseInt(id)\n    }\n\n    get newTestMode(): string | undefined {\n        let mode = m.route.param(\"testMode\")\n        return (mode === \"\") ? undefined : mode\n    }\n\n}\n","export class TagModel {\n    public frq: number\n\n    constructor(\n        public raw: string,\n        public flag: string,\n        public key: string,\n        public separator: string | null,\n        public val: string | null,\n        public clean: string,\n        public cleanKey: string,\n        public cleanVal: string | null,\n        public rendered: string\n    ) { \n        this.frq = 1\n    }\n\n}\n","import { TagModel } from \".\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport class BaseEntryModel {\n    public raw: string = \"\"\n    public safe: string = \"\"\n    public clean: string = \"\"\n    public tokens: string[] = []\n    public rendered: string = \"\"\n    public tags: Map<string, TagModel> = new Map()\n    public tagMatches: { tag: TagModel, match: RegExpMatchArray }[] = []\n}\n\nexport class JournalEntryModel extends BaseEntryModel {\n    readonly id: number\n    readonly shelf: ShelfModel\n    readonly journal: JournalModel\n\n    public saved: string = \"\"\n    public savedClean: string = \"\"\n\n    constructor(shelf: ShelfModel, journal: JournalModel, entryId: number) {\n        super()\n        this.id = entryId\n        this.shelf = shelf\n        this.journal = journal\n    }\n}\n","import { JournalModel } from \".\"\n\nexport class ShelfModel {\n    readonly id: string\n    readonly title: string | undefined\n\n    public error: boolean\n    public journals: Map<number, JournalModel> = new Map()\n\n    constructor(id: string, title?: string, error?: boolean) {\n        this.id = id\n        this.title = title\n        this.error = (error === undefined) ? false : error\n    }\n\n}\n","import m from \"mithril\"\nimport { errorsController } from \"../controllers\"\nimport { SyncerState, SyncerPayload, ErrorPayload } from \"../types\"\n\nexport class SyncerModel {\n    private static instance: SyncerModel\n\n    public requestsCounter: number\n    public requests: Map<string, Function>\n    public state: SyncerState\n\n    private constructor() {\n        this.requestsCounter = 0\n        this.requests = new Map()\n        this.state = SyncerState.INITIALIZING\n    }\n\n    static getInstance(): SyncerModel {\n        return (!SyncerModel.instance) ? new SyncerModel() : SyncerModel.instance\n    }\n\n    public pushSyncerTask<P extends SyncerPayload>(payload: P, worker: Worker): Promise<P> {\n        let id = `payload-${this.requestsCounter++}`\n        return new Promise((resolve, reject) => {\n            this.requests.set(id, ({ payload, error }: { payload: P, error: ErrorPayload }) => {\n                if (error && error.rejects) {\n                    this.requests.delete(id)\n                    reject(error)\n                } else if (error) {\n                    errorsController.add(error.error.message, error.friendlyMsg)\n                    m.redraw()\n                } else {\n                    this.requests.delete(id)\n                    resolve(payload)\n                }\n            })\n            worker.postMessage({ id, payload })\n        })\n    }\n\n}\n","import { MockGapi, MockGoogleUser } from \"../mocks\"\n\nexport class GoogleModel {\n    private static instance: GoogleModel\n\n    readonly src: string\n    readonly scope: string\n    readonly clientId: string\n\n    public isSignedIn: boolean | undefined\n    public gapi_: MockGapi | typeof gapi | undefined\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | undefined\n\n    private constructor() {\n        this.isSignedIn = false\n        this.src = \"https://apis.google.com/js/api.js\"\n        this.scope = [\n            \"https://www.googleapis.com/auth/spreadsheets\",\n        ].join(\" \")\n        this.clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\n    }\n\n    static getInstance() {\n        return (!GoogleModel.instance) ? new GoogleModel() : GoogleModel.instance\n    }\n\n    get token(): string | undefined {\n        if (!this.user) return\n        let auth = this.user.getAuthResponse()\n        return auth.access_token\n    }\n}\n","import { FriendlyError } from \"../errors\"\n\nexport class ErrorsModel {\n    private static instance: ErrorsModel\n\n    public errors: FriendlyError[] = []\n\n    private constructor() {}\n\n    add(error: FriendlyError) {\n        this.errors.push(error)\n    }\n\n    remove(idx: number) {\n        this.errors.splice(idx, 1)\n    }\n\n    static getInstance(): ErrorsModel {\n        return (!ErrorsModel.instance) ? new ErrorsModel() : ErrorsModel.instance\n    }\n}\n","import { ShelfModel } from \"./ShelfModel\"\nimport { JournalEntryModel, TagModel } from \".\"\n\nexport class JournalModel {\n    readonly id: number\n    readonly title: string\n    readonly shelf: ShelfModel\n\n    public loaded: boolean\n    public tags: Map<string, TagModel>\n    public entries: { id: number, entry: JournalEntryModel }[]\n\n    constructor(shelf: ShelfModel, journalId: number, journalTitle: string) {\n        this.entries = []\n        this.shelf = shelf\n        this.loaded = false\n        this.id = journalId\n        this.tags = new Map()\n        this.title = journalTitle\n    }\n\n    public createEntry(idx: number, entry: JournalEntryModel) {\n        this.entries.splice(idx, 0, { id: entry.id, entry })\n    }\n\n    public deleteEntry(idx: number) {\n        this.entries.splice(idx, 1)\n    }\n\n    public moveEntry(fromIdx: number, toIdx: number) {\n        this.entries.splice(toIdx, 0, this.entries.splice(fromIdx, 1)[0])\n    }\n\n}\n","import { ShelfModel } from \".\"\n\nexport class LibraryModel {\n    private static instance: LibraryModel\n    \n    public shelves: Map<string, ShelfModel | undefined>\n\n    private constructor() {\n        this.shelves = new Map()\n        this.shelfIds.forEach(id => this.shelves.set(id, undefined))\n    }\n\n    static getInstance() {\n        return (!LibraryModel.instance) ? new LibraryModel() : LibraryModel.instance\n    }\n\n    set shelfIds(ids: string[]) {\n        if (ids.length === 0) {\n            localStorage.removeItem(\"spreadsheetIds\")\n        } else {\n            localStorage.setItem(\"spreadsheetIds\", ids.join(\",\"))\n        }\n    }\n    get shelfIds(): string[] {\n        let ids = localStorage.getItem(\"spreadsheetIds\")\n        return (ids === null) ? [] : ids.split(\",\")\n    }\n}\n","import { TestMode } from \"../types\"\n\nexport class AppStateModel {\n    private static instance: AppStateModel\n\n    public testMode: TestMode\n\n    private constructor() {\n        this.testMode = TestMode.OFF\n    }\n\n    static getInstance(): AppStateModel {\n        return (!AppStateModel.instance) ? new AppStateModel() : AppStateModel.instance\n    }\n}\n","import { errorsController } from \"../controllers\"\n\nexport class ServiceWorkerModel {\n    private static instance: ServiceWorkerModel\n\n    private constructor() {\n        if (\"serviceWorker\" in navigator) {\n            window.addEventListener(\"load\", async () => {\n                await navigator.serviceWorker.register(\"../serviceWorker.js\")\n            })\n        } else {\n            errorsController.add(\"serviceWorker not supported\", \"Your browser is not supported.\")\n        }\n    }\n\n    static getInstance(): ServiceWorkerModel {\n        return (!ServiceWorkerModel.instance) ? new ServiceWorkerModel() : ServiceWorkerModel.instance\n    }\n}\n","import { ShelfModel, JournalModel } from \"../models\"\n\nexport const shelfFactory = {\n    createShelf: createShelf,\n}\n\nfunction createShelf(spreadsheetId: string, spreadsheet?: gapi.client.sheets.Spreadsheet, error?: boolean): ShelfModel {\n    if (\n        spreadsheet !== undefined &&\n        spreadsheet.spreadsheetId !== undefined &&\n        spreadsheet.properties !== undefined &&\n        spreadsheet.properties.title !== undefined &&\n        spreadsheet.sheets !== undefined\n    ) {\n        let shelf = new ShelfModel(spreadsheet.spreadsheetId, spreadsheet.properties.title)\n        getJournals(shelf, spreadsheet.sheets).forEach(journal => shelf.journals.set(journal.id, journal))\n        return shelf\n    }\n    return new ShelfModel(spreadsheetId, undefined, error)\n}\n\nfunction getJournals(shelf: ShelfModel, sheets: gapi.client.sheets.Sheet[]): JournalModel[] {\n    let journals: JournalModel[] = []\n    sheets.forEach(sheet => {\n        if (\n            sheet.properties !== undefined &&\n            sheet.properties.title !== undefined &&\n            sheet.properties.sheetId !== undefined\n        ) {\n            let journal = new JournalModel(\n                shelf, sheet.properties.sheetId, sheet.properties.title\n            )\n            if (journal === undefined) return\n            journals.push(journal)\n        }\n    })\n    return journals\n}\n","import { entryController } from \"../controllers\"\nimport { JournalEntryModel, ShelfModel, JournalModel, BaseEntryModel } from \"../models\"\n\nlet entryCounter = -1\n\nexport const entryFactory = {\n    createBaseEntry: createBaseEntry,\n    createJournalEntry: createJournalEntry\n}\n\nfunction createBaseEntry(content?: string) {\n    let entry = new BaseEntryModel()\n    entryController.update(entry, content || \"\")\n    return entry\n}\n\nfunction createJournalEntry(shelf: ShelfModel, journal: JournalModel, content: string) {\n    let entry = new JournalEntryModel(shelf, journal, entryCounter += 1)\n    entryController.update(entry, content)\n    return entry\n}\n","export const caretController = {\n    getCaretPosition: getCaretPosition,\n    setCaretPosition: setCaretPosition,\n}\n\nfunction node_walk(node: any, func: any): void {\n    var result = func(node)\n    for (node = node.firstChild; result !== false && node; node = node.nextSibling)\n        result = node_walk(node, func)\n    return\n}\n\nfunction getCaretPosition(elem: any) {\n    var sel: any = window.getSelection()\n    var cum_length = [0, 0]\n\n    if (sel.anchorNode == elem) {\n        cum_length = [sel.anchorNode.innerText.length, sel.extentNode.innerText.length]\n    } else {\n        var nodes_to_find = [sel.anchorNode, sel.extentNode]\n        if (!elem.contains(sel.anchorNode) || !elem.contains(sel.extentNode)) {\n            return undefined\n        } else {\n            var found = [0, 0]\n            var i\n            node_walk(elem, function (node: any): void {\n                for (i = 0; i < 2; i++) {\n                    if (node == nodes_to_find[i]) {\n                        found[i] = 1\n                        if (found[i == 0 ? 1 : 0]) {\n                            return\n                        }\n                    }\n                }\n                if (node.textContent && !node.firstChild) {\n                    for (i = 0; i < 2; i++) {\n                        if (!found[i]) {\n                            cum_length[i] += node.textContent.length\n                        }\n                    }\n                }\n            })\n            cum_length[0] += sel.anchorOffset\n            cum_length[1] += sel.extentOffset\n        }\n    }\n    if (cum_length[0] <= cum_length[1]) {\n        return cum_length\n    }\n    return [cum_length[1], cum_length[0]]\n}\n\nfunction setCaretPosition(el: any, pos: any): any {\n    if (el !== null && pos !== null) {\n        for (var node of el.childNodes) {\n            if (node.nodeType == 3) {\n                if (node.length >= pos) {\n                    let range = document.createRange()\n                    let sel: any = window.getSelection()\n                    range.setStart(node, pos)\n                    range.collapse(true)\n                    sel.removeAllRanges()\n                    sel.addRange(range)\n                    return -1\n                } else {\n                    pos -= node.length\n                }\n            } else {\n                pos = setCaretPosition(node, pos)\n                if (pos == -1) {\n                    return -1\n                }\n            }\n        }\n        return pos\n    }\n}\n","import { searchModel } from \"..\"\nimport { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { entryController } from \"./entryController\"\nimport { TagModel, JournalModel, JournalEntryModel } from \"../models\"\n\nexport const searchController = {\n    reset: reset,\n    buildRefines: buildRefines,\n    filteredEntries: filteredEntries,\n    updateSearchbar: updateSearchbar,\n}\n\nfunction updateSearchbar(content: string) {\n    entryController.update(searchModel.barQuery, content)\n}\n\nfunction reset() {\n    searchModel.searchType = SearchType.NONE\n    searchModel.barQuery = entryFactory.createBaseEntry()\n    searchModel.refinesQuery = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n}\n\nfunction buildRefines(journal: JournalModel) {\n    let simpleRefines: Map<string, TagModel> = new Map()\n    let complexRefines: Map<string, TagModel[]> = new Map()\n\n    for (let tag of journal.tags.values()) {\n        if (tag.val === null) {\n            let key = `${tag.flag}${tag.cleanKey}`\n            if (!simpleRefines.has(key)) {\n                simpleRefines.set(key, tag)\n            }\n        } else {\n            let key = `${tag.flag}${tag.cleanKey}${tag.separator}`\n            if (!complexRefines.has(key)) { complexRefines.set(key, []) }\n            complexRefines.get(key)!.push(tag)\n        }\n    }\n\n    searchModel.simpleRefines = new Map([...simpleRefines.entries()])\n    searchModel.complexRefines = new Map([...complexRefines.entries()].sort())\n\n    cleanRefines()\n}\n\nfunction cleanRefines() {\n    // Clean stale simple tag key (refine val) selections\n    for (let [key,] of searchModel.refinesQuery.simpleKeys) {\n        if (!searchModel.simpleRefines.has(key)) {\n            searchModel.refinesQuery.simpleKeys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag key selections\n    for (let key of searchModel.refinesQuery.keys) {\n        if (!searchModel.complexRefines.has(key)) {\n            searchModel.refinesQuery.keys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag val\n    for (let [key,] of searchModel.refinesQuery.vals) {\n        if (!Array.from(searchModel.complexRefines.values()).some(tags => tags.some(tag => tag.clean === key))) {\n            searchModel.refinesQuery.vals.delete(key)\n        }\n    }\n}\n\nfunction filteredEntries(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    if (searchModel.query.tokens.length === 0) {\n        searchModel.searchType = SearchType.NONE\n        filteredEntries = entries.map(({ entry }, idx) => { return { idx, entry } })\n    } else {\n        searchModel.searchType = SearchType.AND\n        filteredEntries = search(entries)\n        if (filteredEntries.length === 0) {\n            searchModel.searchType = SearchType.OR\n            filteredEntries = search(entries)\n        }\n    }\n    return filteredEntries\n}\n\nfunction search(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let query = searchModel.query\n    let sourceEntries = entries\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    for (let [idx, { entry }] of sourceEntries.entries()) {\n        switch (searchModel.searchType) {\n            case SearchType.AND:\n                if (query.tokens.every(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n            case SearchType.OR:\n                if (query.tokens.some(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n        }\n    }\n    return filteredEntries\n}\n\nfunction match(token: string, entry: JournalEntryModel) {\n\n    if (token.startsWith(\"-@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token.substring(1)) === undefined\n    } else if (token.startsWith(\"-\")) {\n        return !entry.savedClean.includes(token.substring(1))\n    } else if (token.startsWith(\"@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token) !== undefined\n    } else {\n        return entry.savedClean.includes(token)\n    }\n}\n","import m from \"mithril\"\nimport { MockGapi } from \"../mocks\"\nimport { TestMode } from \"../types\"\nimport { googleModel, appStateModel } from \"..\"\nimport { syncerController, libraryController } from \"../controllers\"\nimport { urlController } from \"./urlController\"\n\nexport const googleController = {\n    signIn: signIn,\n    signOut: signOut,\n    initGapi: initGapi,\n}\n\nfunction signOut() {\n    googleModel.gapi_!.auth2.getAuthInstance().signOut()\n}\n\nfunction signIn() {\n    googleModel.gapi_!.auth2.getAuthInstance().signIn()\n}\n\nfunction initGapi() {\n    let gapi_ = (appStateModel.testMode === TestMode.OFF) ? gapi : new MockGapi()\n    googleModel.gapi_ = gapi_\n    googleModel.gapi_.load('auth2', () => {\n        googleModel.gapi_!.auth2.init({\n            scope: googleModel.scope, client_id: googleModel.clientId\n        }).then(() => {\n            googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.listen(isSignedIn)\n            isSignedIn((googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.get()))\n        })\n    })\n}\n\nasync function isSignedIn(signedIn: boolean) {\n    googleModel.isSignedIn = signedIn\n    if (googleModel.isSignedIn) {\n        googleModel.user = googleModel.gapi_!.auth2.getAuthInstance().currentUser.get()\n        syncerController.updateAuth(googleModel.token)\n        libraryController.loadShelves()\n    } else {\n        libraryController.removeShelves()\n        urlController.redirect(\"/\")\n    }\n    m.redraw()\n}\n","export * from \"./Gapi\"\n","export class MockGapi {\n    public auth2 = new MockAuth2()\n    public load(_api: string, _callback: () => void) {\n        _callback()\n    }\n}\n\nclass MockAuth2 {\n    public getAuthInstance() {\n        return new MockGoogleAuth()\n    }\n    public async init(_params: any) { }\n}\n\nclass MockCurrentUser {\n    public get() { return new MockGoogleUser() }\n}\n\nexport class MockGoogleUser {\n    public getAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n    public async reloadAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n}\n\nclass MockGoogleAuth {\n    public isSignedIn = new MockIsSignedIn()\n    public signOut() { }\n    public signIn() { }\n    public currentUser = new MockCurrentUser()\n}\n\nclass MockIsSignedIn {\n    public listen = (_callback: any) => { }\n    public get = () => { return true }\n}\n","import { errorsModel } from \"..\"\nimport { FriendlyError } from \"../errors\"\n\nexport const errorsController = {\n    add: add,\n    remove: remove,\n}\n\nfunction add(errorMsg: string, friendlyMsg: string) {\n    console.error(errorMsg)\n    errorsModel.add(new FriendlyError(errorMsg, friendlyMsg))\n}\n\nfunction remove(idx: number) {\n    errorsModel.remove(idx)\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ErrorPayload } from \"../types\"\nimport { shelfFactory } from \"../factories\"\nimport { urlController, journalController, syncerController, errorsController } from \"../controllers\"\n\nconst spreadsheetIdPattern = /\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/g\n\nexport const libraryController = {\n    addShelves: addShelves,\n    loadShelves: loadShelves,\n    removeShelves: removeShelves,\n    getSpreadsheetIdsFromUrls: getSpreadsheetIdsFromUrls,\n}\n\nfunction addShelves(urls: string) {\n    let ids = getSpreadsheetIdsFromUrls(urls)\n    ids = ids.filter(id => !libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.set(id, undefined))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n    loadShelves(false, ids)\n}\n\nfunction removeShelves(ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    ids = ids.filter(id => libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.delete(id))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n}\n\nfunction loadShelves(reloadLoaded?: boolean, ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    if (reloadLoaded) {\n        ids.forEach(id => libraryModel.shelves.set(id, undefined))\n        m.redraw()\n    }\n    ids.filter(id => !libraryModel.shelves.get(id))\n        .forEach(id => syncerController.getSpreadsheet(id)\n        .then(payload => {\n            let shelf = shelfFactory.createShelf(id, payload.spreadsheet)\n            libraryModel.shelves.set(shelf.id, shelf)\n            let journal = urlController.getActiveJournal()\n            if (journal && journal.shelf === shelf) {\n                journalController.loadEntries(journal)\n            }\n        })\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n            let shelf = shelfFactory.createShelf(id, undefined, true)\n            libraryModel.shelves.set(id, shelf)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n    )\n}\n\nfunction getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\n    let ids: string[] = []\n    if (urls) {\n        Array.from(urls.matchAll(spreadsheetIdPattern)).forEach(m => ids.push(m[1]))\n    }\n    return ids\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { tagFactory, entryFactory } from \"../factories\"\nimport { JournalEntryModel, JournalModel, TagModel } from \"../models\"\nimport { syncerController, searchController, entryController, errorsController } from \".\"\nimport { ErrorPayload } from \"../types\"\n\nexport const journalController = {\n    addEntry: addEntry,\n    createEntry: createEntry,\n    updateEntry: updateEntry,\n    moveEntry: moveEntry,\n    buildTags: buildTags,\n    deleteEntry: deleteEntry,\n    loadEntries: loadEntries,\n}\n\nfunction unloadOtherJournals(keepJournal: JournalModel) {\n    libraryModel.shelves.forEach(shelf => {\n        if (shelf === undefined) return\n        shelf.journals.forEach(journal => {\n            if (keepJournal.shelf.id !== journal.shelf.id || keepJournal.id !== journal.id) {\n                unloadEntries(journal)\n            }\n        })\n    })\n}\n\nfunction unloadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    journal.entries = []\n    journal.loaded = false\n}\n\nfunction loadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    unloadOtherJournals(journal)\n    syncerController.getRows(journal.shelf.id, journal.id, journal.title)\n        .then(payload => {\n            payload.rows.forEach((content, idx) => addEntry(journal, idx, content))\n            journal.loaded = true\n            m.redraw()\n        })\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n}\n\nfunction addEntry(journal: JournalModel, idx: number, content: string | undefined) {\n    content = (content === undefined) ? \"\" : content\n    let entry = entryFactory.createJournalEntry(journal.shelf, journal, content)\n    journal.createEntry(idx, entry)\n    entryController.save(entry, content)\n    buildTags(journal)\n}\n\nfunction createEntry(journal: JournalModel, idx: number, content?: string) {\n    content = (content === undefined) ? \"\" : content\n    let entry = entryFactory.createJournalEntry(journal.shelf, journal, content)\n    journal.createEntry(idx, entry)\n    entryController.save(entry, content)\n    syncerController.createRow(journal.shelf.id, journal.id, idx)\n    syncerController.updateRow(journal.shelf.id, journal.id, journal.title, idx, entry.raw)\n    buildTags(journal)\n}\n\nfunction updateEntry(journal: JournalModel, entry: JournalEntryModel, idx: number, content: string) {\n    if (entry.saved === content) return\n    entryController.save(entry, content)\n    syncerController.updateRow(journal.shelf.id, journal.id, journal.title, idx, entry.raw)\n    buildTags(journal)\n}\n\nfunction deleteEntry(journal: JournalModel, idx: number) {\n    journal.deleteEntry(idx)\n    syncerController.deleteRow(journal.shelf.id, journal.id, idx)\n    buildTags(journal)\n}\n\nfunction moveEntry(journal: JournalModel, fromIdx: number, toIdx: number) {\n    if (fromIdx === toIdx) return\n    journal.moveEntry(fromIdx, toIdx)\n    buildTags(journal)\n}\n\nfunction buildTags(journal: JournalModel) {\n    let tags: Map<string, TagModel> = new Map()\n    let entries = Array.from(journal.entries.values())\n    for (let { entry } of entries.reverse()) {\n        for (let [key, tag] of entry.tags) {\n            if (tags.has(key)) {\n                tags.get(key)!.frq += tag.frq\n            } else {\n                tags.set(key, tagFactory.createTag(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\n            }\n        }\n    }\n    journal.tags = tags\n    searchController.buildRefines(journal)\n}\n","import { appStateModel } from \"..\"\nimport { syncerController } from \"./syncerController\"\nimport { TestMode, instanceOfTestMode } from \"../types\"\n\nexport const appStateController = {\n    updateTestMode: updateTestMode,\n}\n\nfunction updateTestMode(mode: TestMode | string | undefined) {\n    if (mode !== undefined && instanceOfTestMode(mode) && mode !== appStateModel.testMode) {\n        appStateModel.testMode = mode\n        syncerController.updateTestMode(mode)\n    }\n}\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { googleController } from \"../controllers\"\n\nexport function googleComponent() {\n\n    function view() {\n        return m(\"#googleApi\", [\n            preambleMessage(),\n            signInOutButton(),\n            m(\"script\", gapiScriptSettings()),\n        ])\n    }\n\n    function gapiScriptSettings() {\n        return {\n            async: true,\n            defer: true,\n            src: googleModel.src,\n            onload: () => {\n                if (!googleModel.isSignedIn) {\n                    googleController.initGapi()\n                }\n            }\n        }\n    }\n\n    function signInOutButton() {\n        return (googleModel.isSignedIn)\n            ? m(\"button\", { onclick: () => googleController.signOut(), class: \"authButton\" }, \"Sign Out\")\n            : m(\"button\", { onclick: () => googleController.signIn(), class: \"authButton\" }, \"Sign In\")\n    }\n\n    function preambleMessage() {\n        return (googleModel.isSignedIn !== undefined && !googleModel.isSignedIn)\n            ? m(\".preamble\", \"PREAMBLE MSG\") // TODO: fill out\n            : null\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { errorsModel } from \"..\"\nimport { FriendlyError } from \"../errors\"\nimport { errorsController } from \"../controllers\"\n\nexport function errorsComponent() {\n\n    function view() {\n        return m(\"#errorsContainer\", errorsList())\n    }\n\n    function errorsList() {\n        if (errorsModel.errors.length !== 0) {\n            return m(\"#errors\", errorsModel.errors.map((error, idx) => errorVnode(error, idx)))\n        }\n        return null\n    }\n\n    function errorVnode(error: FriendlyError, idx: number) {\n        return m(\"div\", [\n            m(\"span\", { id: `error-${idx}`}, error.friendlyMsg),\n            m(\"button\", { \n                onclick: () => errorsController.remove(idx),\n                class: \"dismissErrorButton\",\n            }, \"Dismiss\"),\n        ])\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { BaseEntryModel, JournalModel } from \"../models\"\nimport { urlController, journalController, caretController, entryController } from \"../controllers\"\n\nexport function composeComponent() {\n    var caret: Caret = { el: null, pos: null }\n\n    const composePrefixEntry = entryFactory.createBaseEntry()\n    const composeContentEntry = entryFactory.createBaseEntry()\n    const composeSuffixEntry = entryFactory.createBaseEntry()\n\n    const prefixSettings = { \"placeholder\": \"Static Entry Prefix\" }\n    const entrySettings = { \"placeholder\": \"Entry Content\" }\n    const suffixSettings = { \"placeholder\": \"Static Entry Suffix\" }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#compose\", [\n            m(\n                \"#prefix\",\n                composeNodeSettings(composePrefixEntry, journal, prefixSettings),\n                m.trust(composePrefixEntry.rendered)\n            ),\n            m(\n                \"#content\",\n                composeNodeSettings(composeContentEntry, journal, entrySettings),\n                m.trust(composeContentEntry.rendered)\n            ),\n            m(\n                \"#suffix\",\n                composeNodeSettings(composeSuffixEntry, journal, suffixSettings),\n                m.trust(composeSuffixEntry.rendered)\n            ),\n        ])\n    }\n\n    function getComposedContent() {\n        let els = [\n            document.getElementById(\"prefix\"),\n            document.getElementById(\"content\"),\n            document.getElementById(\"suffix\"),\n        ]\n        return els.map(el => el!.innerText).join(\"\")\n    }\n\n    function composeNodeSettings(entry: BaseEntryModel, journal: JournalModel, extraSettings: object) {\n        let baseSettings = {\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: async (event: any) => await composeKeydown(event, journal),\n            oninput: (event: any) => composeInput(event, entry),\n            onupdate: () => composeUpdate(),\n        }\n        return Object.assign(baseSettings, extraSettings)\n    }\n\n    async function composeKeydown(event: any, journal: JournalModel) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            let content = getComposedContent()\n            entryController.update(composeContentEntry, \"\")\n            let idx = journal.entries.length\n            journalController.createEntry(journal, idx, content)\n        }\n    }\n\n    function composeInput(event: any, entry: BaseEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function composeUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { JournalModel, JournalEntryModel } from \"../models\"\nimport {\n    caretController, urlController, entryController, journalController, searchController\n} from \"../controllers\"\n\nexport function entriesComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        let shelf = urlController.getActiveShelf()\n        const journal = urlController.getActiveJournal()\n        if (!shelf || !journal) return null\n\n        return m(\"#entries\", [\n            m(\".tempguidancePre\", \"Entries\"),\n            entriesList(journal),\n        ])\n    }\n\n    function entriesList(journal: JournalModel) {\n        return searchController.filteredEntries(journal.entries)\n            .map(({ idx, entry }) => entryVnode(entry, idx))\n    }\n\n    function createEntryVnode(journal: JournalModel, idx: number): m.Vnode {\n        return m(\"button\", {\n            class: \"createEntry\",\n            id: `createEntry-${idx}`,\n            onclick: async () => journalController.createEntry(journal, idx)\n        }, \"ins\")\n    }\n\n    function entryVnode(entry: JournalEntryModel, entryIdx: number): m.Vnode {\n        return m(\".entryWrap\", {\n            id: `entry-${entry.id}`,\n            class: `entry-idx-${entryIdx}`\n        }, [\n            createEntryVnode(entry.journal, entryIdx),\n            entryContent(entry, entryIdx),\n            deleteEntryButton(entry, entryIdx),\n            createEntryVnode(entry.journal, entryIdx+1),\n        ])\n    }\n\n    function deleteEntryButton(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"button\", {\n            id: `del-entry-${entry.id}`,\n            class: `del del-entry-idx-${entryIdx}`,\n            onclick: async () => journalController.deleteEntry(entry.journal, entryIdx)\n        }, \"del\")\n    }\n\n    function entryContent(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"div\", entryContentSettings(entry, entryIdx), m.trust(entry.rendered))\n    }\n\n    function onEntryKeydown(event: any) {\n        event.redraw = false\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function onEntryInput(event: any, entry: JournalEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function onEntryUpdate(event: any) {\n        event.redraw = false\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    async function onEntryBlur(event: any, entry: JournalEntryModel, entryIdx: number) {\n        event.redraw = false\n        journalController.updateEntry(entry.journal, entry, entryIdx, event.target.innerText)\n    }\n\n    function entryContentSettings(entry: JournalEntryModel, entryIdx: number) {\n        return {\n            id: `entry-${entry.id}-content`,\n            contenteditable: \"true\",\n            class: `entry breakwrap column entry-idx-${entryIdx}-content`,\n            onkeydown: (event: any) => onEntryKeydown(event),\n            oninput: (event: any) => onEntryInput(event, entry),\n            onupdate: (event: any) => onEntryUpdate(event),\n            onblur: (event: any) => onEntryBlur(event, entry, entryIdx),\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ShelfModel } from \"../models\"\nimport { libraryController } from \"../controllers\"\n\nexport function shelvesComponent() {\n\n    function view() {\n        let shelves = Array.from(libraryModel.shelves.entries())\n        return m(\"#shelvesList\", shelves.map(([id, shelf]) => shelfNode(id, shelf)))\n    }\n\n    function delShelfButton(id: string) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: () => libraryController.removeShelves([id])\n        }, \"del\")\n    }\n\n    function retryShelfLoadButton(id: string) {\n        return m(\"button\", {\n            onclick: () => libraryController.loadShelves(true, [id])\n        }, \"retry\")\n    }\n\n    function shelfNode(id: string, shelf: ShelfModel | undefined) {\n        if (shelf === undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", id)\n            ])\n        } else if (shelf.error) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", { class: \"solidError\" }, `${id}`),\n                retryShelfLoadButton(id)\n            ])\n        } else {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"a\", {\n                    href: `#/library/${id}`,\n                    id: `shelf-${id}`\n                }, shelf.title)\n            ])\n        }\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { urlController } from \"../controllers\"\nimport { TagModel } from \"../models\"\n\nexport function refinesComponent() {\n    const simpleTagsHeader = \"Simple Tags\"\n    const expanded: Set<string> = new Set()\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#tagsWrap\", m(\"#tags\", [\n            m(\".tempguidancePre\", \"Tags\"),\n            simpleRefinesVnodes(),\n            complexRefinesVnodes(),\n        ]))\n    }\n\n    function simpleRefinesVnodes() {\n        if (searchModel.simpleRefines.size === 0) return\n        return m(\".tagRefineWrap\", [\n            refineKeyVnode(simpleTagsHeader, searchModel.simpleRefines.size),\n            Array.from(searchModel.simpleRefines, ([key, tag]) => [\n                refineValVnode(key, tag)\n            ])\n        ])\n    }\n\n    function complexRefinesVnodes(): m.Vnode[] {\n        return Array.from(searchModel.complexRefines, ([key, tags]) => m(\".tagRefineWrap\", [\n            refineKeyVnode(key, tags.length),\n            tags.map(tag => [refineValVnode(key, tag)])\n        ]))\n    }\n\n    function refineKeyVnode(key: string, count: number) {\n        return m(\"span\", tagRefineKeySettings(key), [\n            (key === simpleTagsHeader)\n                ? []\n                : m(\"input\", { type: \"checkbox\", checked: searchModel.refinesQuery.keys.has(key) }),\n            (expanded.has(key)) ? m(\"span\", \"▾ \") : m(\"span\", \"▿ \"),\n            m(\"span\", key),\n            m(\"span\", ` (${count})`),\n        ])\n    }\n\n    function refineValVnode(key: string, tag: TagModel) {\n        return m(\"div\", { class: `tagRefineValWrap` }, [\n            m(\"span\", tagRefineValSettings(key, tag), [\n                m(\"input\", {\n                    type: \"checkbox\", checked: (tag.val === null)\n                        ? searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                        : searchModel.refinesQuery.vals.has(tag.clean)\n                }),\n                (tag.val !== null)\n                    ? m(\"span\", `${tag.cleanVal}`)\n                    : m(\"span\", `${tag.flag}${tag.cleanKey}`),\n                m(\"span\", ` (${tag.frq})`),\n            ]),\n        ])\n    }\n\n    function tagRefineKeySettings(key: string) {\n        return {\n            class: \"roundTagKey\",\n            onclick: (event: any) => refineTagKeyOnClick(event, key),\n        }\n    }\n\n    function tagRefineValSettings(key: string, tag: TagModel) {\n        let tagClass = (tag.val === null) ? \"simpleTag\" : \"roundTagVal\"\n        let hideClass = \"hide\"\n        if (\n            (tag.val === null && expanded.has(simpleTagsHeader)) ||\n            expanded.has(key) ||\n            searchModel.refinesQuery.vals.has(tag.clean)\n        ) {\n            hideClass = \"\"\n        }\n        return {\n            class: `${tagClass} ${hideClass}`,\n            onclick: () => refineTagValOnClick(tag),\n        }\n    }\n\n    function refineTagKeyOnClick(event: any, key: string) {\n        if (!event.metaKey && !event.ctrlKey) {\n            expanded.has(key) ? expanded.delete(key) : expanded.add(key)\n        } else {\n            if (key === simpleTagsHeader) { return }\n            searchModel.refinesQuery.keys.has(key)\n                ? searchModel.refinesQuery.keys.delete(key)\n                : searchModel.refinesQuery.keys.add(key)\n        }\n    }\n\n    function refineTagValOnClick(tag: TagModel) {\n        if (tag.val === null) {\n            searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                ? searchModel.refinesQuery.simpleKeys.delete(tag.clean)\n                : searchModel.refinesQuery.simpleKeys.set(tag.clean, tag)\n        } else {\n            searchModel.refinesQuery.vals.has(tag.clean)\n                ? searchModel.refinesQuery.vals.delete(tag.clean)\n                : searchModel.refinesQuery.vals.set(tag.clean, tag)\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { appStateModel } from \"..\"\nimport { TestMode } from \"../types\"\nimport { appStateController, urlController } from \"../controllers\"\n\nexport function testModeComponent() {\n\n    function view() {\n        if (appStateModel.testMode !== TestMode.OFF) {\n            return m(\"#testMode\", [\n                m(\"span\", `${appStateModel.testMode} active `),\n                stopDemoButton()\n            ])\n        }\n        return\n    }\n\n    function stopDemoButton() {\n        if (appStateModel.testMode === TestMode.DEMO) {\n            return m(\"button\", { onclick: () => {\n                appStateController.updateTestMode(TestMode.OFF)\n                urlController.redirect(\"/library\")\n            }, class: \"stopDemo\" }, \"Start Now\")\n        }\n        return\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { urlController } from \"../controllers\"\n\nexport function journalsComponent() {\n\n    function view() {\n        return m(\"#journals\", journalList())\n    }\n\n    function journalList() {\n        let shelf = urlController.getActiveShelf()\n        if (shelf === undefined) {\n            urlController.redirect(\"/library\")\n            return\n        }\n        return Array.from(shelf.journals.values()).map(journal => {\n            let link = `#/library/${journal.shelf.id}/${journal.id}`\n            return m(\"li\", m(\"a\", {\n                href: link,\n                id: `journal-${journal.id}`\n            }, journal.title))\n        })\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { SyncerState, TestMode } from \"../types\"\nimport { syncerController } from \"../controllers\"\nimport { syncerModel, googleModel, libraryModel, appStateModel } from \"..\"\n\nexport function syncStateComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn || libraryModel.shelves.size === 0 || appStateModel.testMode === TestMode.DEMO) return\n        return m(\"#status\", m(\"span\", syncState()))\n    }\n\n    function syncState() {\n        return m(\"span\", [\n            syncStateIcon(),\n            syncStateText(),\n            unpauseSync()\n        ])\n    }\n\n    function syncStateText() {\n        let txt = \"\"\n        let class_ = `syncState ${stateColorClass()}`\n\n        switch (syncerModel.state) {\n            case SyncerState.DOWNLOADING:\n                txt = \"Downloading journal data from drive\"\n                break\n            case SyncerState.PAUSED:\n                txt = \"Warning! - Syncing is paused\"\n                break\n            case SyncerState.SYNCED:\n                txt = \"Cloud synced\"\n                break\n            case SyncerState.UPLOADING:\n                txt = \"Uploading changes to drive\"\n                break\n            case SyncerState.INITIALIZING:\n                txt = \"Initializing\"\n        }\n        return m(\"span\", { id: \"syncStateText\", class: class_ }, txt)\n    }\n\n    function syncStateIcon() {\n        let class_ = `material-icons material-icons-outlined syncState ${stateColorClass()}`\n        return m(\"i\", { id: \"syncStateIcon\", class: class_ }, syncerModel.state)\n    }\n\n    function unpauseSync() {\n        if (syncerModel.state === SyncerState.PAUSED) {\n            return m(\"button\", {\n                id: \"unpauseSync\",\n                class: \"syncState\",\n                onclick: () => syncerController.unpause()\n            }, \"Unpause Syncing\")\n        }\n        return\n    }\n\n    function stateColorClass() {\n        switch (syncerModel.state) {\n            case SyncerState.PAUSED:\n                return \"error\"\n            case SyncerState.SYNCED:\n                return \"okay\"\n            default:\n                return \"warn\"\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { Caret } from \"../types\"\nimport { caretController, textController, searchController, urlController } from \"../controllers\"\n\n\nexport function searchbarComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#search\", [\n            m(\"#searchQuery\", searchNodeSettings(), m.trust(searchModel.barQuery.rendered)),\n            m(\"button\", clearSearchNodeSettings(), \"x\")\n        ])\n    }\n\n    function searchNodeSettings() {\n        return {\n            placeholder: \"Search for text or tags\",\n            contenteditable: \"true\",\n            class: `entry breakwrap`,\n            oninput: (event: any) => onSearchInput(event),\n            onupdate: () => onSearchUpdate(),\n            onkeydown: (event: any) => onSearchKeydown(event)\n        }\n    }\n\n    function onSearchInput(event: any) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        searchController.updateSearchbar(textController.escape(event.target.innerText))\n    }\n\n    function onSearchUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    function onSearchKeydown(event: any) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function clearSearchNodeSettings() {\n        return {\n            id: \"clearSearch\",\n            class: \"del\",\n            onclick: () => searchController.updateSearchbar(\"\")\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { libraryController } from \"../controllers\"\nimport { libraryModel } from \"..\"\n\nexport function addShelvesComponent() {\n\n    let newShelfUrls = \"\"\n    let addingShelves = false\n\n    function view() {\n        return m(\"#addShelves\", [\n            addShelvesMessage(),\n            addShelvesButton(),\n            addShelvesTextbox(),\n        ])\n    }\n\n    function addShelvesMessage() {\n        if (libraryModel.shelves.size !== 0) return\n        return m(\"span\", \"Add Google Spreadsheet URLs here to get started. \")\n    }\n\n    function addShelvesButton() {\n        return m(\"button\", {\n            id: \"addShelvesButton\",\n            onclick: async () => {\n                if (addingShelves) libraryController.addShelves(newShelfUrls)\n                newShelfUrls = \"\"\n                addingShelves = !addingShelves\n            }\n        }, (addingShelves) ? \" ✓ \" : \"+/-\")\n    }\n\n    function addShelvesTextbox() {\n        if (!addingShelves) return null\n        return m(\"textarea\", {\n            id: \"addShelvesText\",\n            placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\n            oninput: (event: any) => newShelfUrls = event.target.value\n        })\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { urlController } from \"../controllers\"\n\nexport function breadcrumbComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn) return\n        return m(\"#breadcrumb\", urlController.getBreadcrumbTrail())\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { urlController, journalController } from \"../controllers\"\nimport {\n    googleComponent, breadcrumbComponent, syncStateComponent, testModeComponent, \n    errorsComponent, graphComponent\n} from \"../components\"\n\nexport function graphView() {\n\n    function oninit() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded) return\n        journalController.loadEntries(journal)\n    }\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(errorsComponent),\n            m(breadcrumbComponent),\n            m(graphComponent),\n        ])\n    }\n\n    return {\n        view: view,\n        oninit: oninit\n    }\n\n}\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { urlController } from \"../controllers\"\nimport { googleComponent } from \"../components\"\n\nexport function signinView() {\n\n    function view() {\n        return m(\"#auth\", [\n            m(googleComponent),\n        ])\n    }\n\n    function onupdate() {\n        if (googleModel.isSignedIn) {\n            urlController.redirect(\"/library\")\n        }\n    }\n\n    return {\n        view: view,\n        onupdate: onupdate,\n    }\n\n}\n","import m from \"mithril\"\nimport { \n    googleComponent, shelvesComponent, syncStateComponent, addShelvesComponent,\n    testModeComponent, errorsComponent\n} from \"../components\"\n\nexport function libraryView() {\n\n    function view() {\n        return m(\"#library\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(errorsComponent),\n            m(addShelvesComponent),\n            m(shelvesComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\nimport { urlController, journalController } from \"../controllers\"\nimport {\n    googleComponent, breadcrumbComponent, entriesComponent, syncStateComponent,\n    searchbarComponent, refinesComponent, composeComponent, testModeComponent,\n    errorsComponent\n} from \"../components\"\n\nexport function journalView() {\n\n    function oninit() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded) return\n        journalController.loadEntries(journal)\n    }\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(errorsComponent),\n            m(breadcrumbComponent),\n            m(searchbarComponent),\n            m(refinesComponent),\n            m(\"#entriesWrap\", [\n                m(entriesComponent),\n                m(composeComponent),\n            ])\n        ])\n    }\n\n    return {\n        view: view,\n        oninit: oninit,\n    }\n\n}\n","import { urlModel } from \"..\"\nimport { TestMode } from \"../types\"\nimport { urlController, appStateController, libraryController } from \"../controllers\"\n\nexport function testModeView() {\n    function view() {\n        if (urlModel.hash.startsWith(\"#/demo\")) {\n            appStateController.updateTestMode(TestMode.DEMO)\n            libraryController.addShelves(\"https://docs.google.com/spreadsheets/d/shelf/edit\")\n            urlController.redirect(\"/library/shelf/0\")\n        }\n\n        if (urlModel.hash.startsWith(\"#/setTestMode\")) {\n            appStateController.updateTestMode(urlModel.newTestMode)\n            urlController.redirect(\"/\")\n        }\n    }\n\n    return {\n        view: view\n    }\n\n}\n"],"sourceRoot":""}