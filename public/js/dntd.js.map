{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"m\"","webpack:///./src/controllers/index.ts","webpack:///./src/types/index.ts","webpack:///./src/index.ts","webpack:///./src/errors/index.ts","webpack:///./src/factories/index.ts","webpack:///./src/components/index.ts","webpack:///./src/models/index.ts","webpack:///./src/types/search.ts","webpack:///./src/types/syncer.ts","webpack:///./src/types/testing.ts","webpack:///./src/types/journal.ts","webpack:///./src/errors/SyncerError.ts","webpack:///./src/errors/FriendlyError.ts","webpack:///./src/controllers/urlController.ts","webpack:///./src/controllers/entryController.ts","webpack:///./src/models/SearchModel.ts","webpack:///./src/controllers/syncerController.ts","webpack:///./src/views/index.ts","webpack:///./src/views/shelfView.ts","webpack:///./src/components/graphComponent.ts","webpack:///external \"cytoscape\"","webpack:///./src/controllers/textController.ts","webpack:///./src/factories/tagFactory.ts","webpack:///./src/models/UrlModel.ts","webpack:///./src/models/TagModel.ts","webpack:///./src/models/EntryModel.ts","webpack:///./src/models/ShelfModel.ts","webpack:///./src/models/SyncerModel.ts","webpack:///./src/models/GoogleModel.ts","webpack:///./src/models/ErrorsModel.ts","webpack:///./src/models/JournalModel.ts","webpack:///./src/models/LibraryModel.ts","webpack:///./src/models/AppStateModel.ts","webpack:///./src/models/ServiceWorkerModel.ts","webpack:///./src/factories/shelfFactory.ts","webpack:///./src/factories/entryFactory.ts","webpack:///./src/controllers/caretController.ts","webpack:///./src/controllers/searchController.ts","webpack:///./src/controllers/googleController.ts","webpack:///./src/mocks/index.ts","webpack:///./src/mocks/Gapi.ts","webpack:///./src/controllers/errorsController.ts","webpack:///./src/controllers/libraryController.ts","webpack:///./src/controllers/journalController.ts","webpack:///./src/controllers/appStateController.ts","webpack:///./src/components/googleComponent.ts","webpack:///./src/components/errorsComponent.ts","webpack:///./src/components/composeComponent.ts","webpack:///./src/components/entriesComponent.ts","webpack:///./src/components/shelvesComponent.ts","webpack:///./src/components/refinesComponent.ts","webpack:///./src/components/graphBarComponent.ts","webpack:///./src/components/testModeComponent.ts","webpack:///./src/components/journalsComponent.ts","webpack:///./src/components/syncStateComponent.ts","webpack:///./src/components/searchbarComponent.ts","webpack:///./src/components/addShelvesComponent.ts","webpack:///./src/components/breadcrumbComponent.ts","webpack:///./src/views/signinView.ts","webpack:///./src/views/libraryView.ts","webpack:///./src/views/journalView.ts","webpack:///./src/views/testModeView.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","errorsModel","ErrorsModel","getInstance","appStateModel","AppStateModel","serviceWorkerModel","ServiceWorkerModel","googleModel","GoogleModel","syncerModel","SyncerModel","libraryModel","LibraryModel","urlModel","UrlModel","searchModel","SearchModel","root","document","getElementById","route","signinView","testModeView","libraryView","shelfView","journalView","SearchType","SyncerPayloadType","SyncerResponseType","SyncerState","TestMode","str","values","includes","ViewMode","SyncerError","Error","errorMsg","friendlyMsg","needsReAuth","pause","rejects","super","this","payload","undefined","error","type","ERROR","FriendlyError","msg","getActiveShelf","id","shelfId","shelves","urlController","redirect","hash","getActiveJournal","journalId","shelf","journals","getBreadcrumbTrail","breadcrumb","split","filter","crumb","length","trail","slice","join","title","parseInt","push","href","replace","tagPattern","entryController","save","entry","content","saved","savedClean","textController","clean","tags","tagMatches","Map","tag","has","frq","set","getTags","update","raw","safe","escape","tokens","text","token","trim","matchesIter","matchAll","match","tagFactory","createTag","sort","a","b","index","getTagMatches","rendered","chars","splice","render","searchType","NONE","simpleRefines","complexRefines","barQuery","entryFactory","createBaseEntry","graphFilter","refinesQuery","keys","Set","vals","simpleKeys","instance","Array","from","worker","Worker","updateAuth","pushSyncerTask","AUTH_UPDATE","onmessage","data","requests","SYNC_STATE","state","redraw","errorsController","add","message","TOKEN_REQUEST","onMessage","syncerController","unpause","UNPAUSE","getRows","journalTitle","GET_ROWS","spreadsheetId","sheetTitle","sheetId","rows","createRow","idx","CREATE_ROW","deleteRow","DELETE_ROW","updateRow","UPDATE_ROW","updateTestMode","testMode","TEST_MODE_UPDATE","getSpreadsheet","GET_SPREADSHEET","spreadsheet","view","googleComponent","testModeComponent","syncStateComponent","errorsComponent","breadcrumbComponent","journalsComponent","cy","headless","graphFilterContinue","graphFilterQuery","startsWith","substring","titleCase","txt","charAt","toUpperCase","substr","toLowerCase","journal","loaded","entries","tagNodes","tagEdges","sourceTag","separator","cleanVal","source","score","targetTag","target","highestNodeScore","node","size","hightestEdgeScore","edge","els","nodes","edges","elements","remove","style","layout","idealEdgeLength","nodeOverlap","refresh","fit","padding","randomize","componentSpacing","nodeRepulsion","edgeElasticity","nestingFactor","gravity","numIter","initialTemp","coolingFactor","minTemp","nodeDimensionsIncludeLabels","run","drawGraph","searchController","filteredEntries","map","oncreate","vnode","dom","mount","cytoscape","unsafe","cleanTagString","endsWith","flag","val","cleanKey","renderedKey","renderedVal","TagModel","window","location","hash_","URL","url","searchParams","param","BaseEntryModel","entryId","requestsCounter","INITIALIZING","Promise","resolve","reject","delete","postMessage","isSignedIn","src","scope","clientId","user","getAuthResponse","access_token","errors","viewMode","COMPOSE","fromIdx","toIdx","shelfIds","forEach","ids","localStorage","removeItem","setItem","getItem","OFF","navigator","addEventListener","serviceWorker","register","shelfFactory","createShelf","properties","sheets","ShelfModel","sheet","JournalModel","getJournals","entryCounter","createJournalEntry","JournalEntryModel","caretController","getCaretPosition","elem","sel","getSelection","cum_length","anchorNode","innerText","extentNode","nodes_to_find","contains","found","node_walk","func","result","firstChild","nextSibling","textContent","anchorOffset","extentOffset","setCaretPosition","el","pos","childNodes","nodeType","range","createRange","setStart","collapse","removeAllRanges","addRange","search","query","sourceEntries","AND","every","OR","some","reset","buildRefines","cleanRefines","updateSearchbar","updateGraphFilterBar","signedIn","gapi_","auth2","getAuthInstance","currentUser","libraryController","loadShelves","removeShelves","googleController","signIn","signOut","initGapi","gapi","MockGapi","load","init","client_id","then","listen","MockAuth2","_api","_callback","MockGoogleAuth","_params","MockCurrentUser","MockGoogleUser","expires_in","MockIsSignedIn","console","spreadsheetIdPattern","reloadLoaded","journalController","loadEntries","catch","finally","getSpreadsheetIdsFromUrls","urls","addShelves","addEntry","createEntry","buildTags","reverse","updateEntry","moveEntry","deleteEntry","keepJournal","unloadEntries","appStateController","instanceOfTestMode","onclick","class","async","defer","onload","errorVnode","errorsList","caret","composePrefixEntry","composeContentEntry","composeSuffixEntry","prefixSettings","entrySettings","suffixSettings","composeNodeSettings","extraSettings","baseSettings","contenteditable","onkeydown","event","keyCode","shiftKey","preventDefault","composeKeydown","oninput","composeInput","onupdate","assign","trust","entriesList","entryIdx","createEntryVnode","entryContent","deleteEntryButton","entryVnode","blur","onEntryKeydown","onEntryInput","onEntryUpdate","onblur","onEntryBlur","entryContentSettings","delShelfButton","retryShelfLoadButton","shelfNode","expanded","simpleRefinesVnodes","refineKeyVnode","refineValVnode","count","metaKey","ctrlKey","refineTagKeyOnClick","tagRefineKeySettings","checked","tagRefineValSettings","tagClass","hideClass","refineTagValOnClick","GRAPH","placeholder","onInput","onKeydown","stopDemoButton","DEMO","link","journalList","syncStateText","class_","stateColorClass","DOWNLOADING","PAUSED","SYNCED","UPLOADING","syncStateIcon","unpauseSync","gotoComposeSettings","gotoGraphSettings","newShelfUrls","addingShelves","addShelvesMessage","addShelvesButton","addShelvesTextbox","addShelvesComponent","shelvesComponent","mainView","graphComponent","entriesComponent","composeComponent","searchbarComponent","graphBarComponent","refinesComponent","oninit","newTestMode"],"mappings":"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","file":"dntd.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = m;","export * from \"./urlController\"\nexport * from \"./textController\"\nexport * from \"./entryController\"\nexport * from \"./caretController\"\nexport * from \"./searchController\"\nexport * from \"./googleController\"\nexport * from \"./syncerController\"\nexport * from \"./errorsController\"\nexport * from \"./libraryController\"\nexport * from \"./journalController\"\nexport * from \"./appStateController\"\n","export * from \"./caret\"\nexport * from \"./search\"\nexport * from \"./syncer\"\nexport * from \"./testing\"\nexport * from \"./journal\"\n","import m from \"mithril\"\nimport { signinView, libraryView, shelfView, journalView, testModeView } from \"./views\"\nimport {\n    ServiceWorkerModel, SyncerModel, LibraryModel, GoogleModel, UrlModel, SearchModel,\n    AppStateModel, ErrorsModel\n} from \"./models\"\n\nexport const errorsModel = ErrorsModel.getInstance()\nexport const appStateModel = AppStateModel.getInstance()\nexport const serviceWorkerModel = ServiceWorkerModel.getInstance()\nexport const googleModel = GoogleModel.getInstance()\nexport const syncerModel = SyncerModel.getInstance()\nexport const libraryModel = LibraryModel.getInstance()\nexport const urlModel = UrlModel.getInstance()\nexport const searchModel = SearchModel.getInstance()\n\nconst root = document.getElementById(\"root\")\n\nif (root !== null) {\n    m.route(root, \"/\", {\n        \"/\": signinView,        // TODO switch to be about page\n        \"/demo\": testModeView,\n        \"/signin\": signinView,\n        \"/library\": libraryView,\n        \"/library/:shelfId\": shelfView,\n        \"/setTestMode/:testMode\": testModeView,\n        \"/library/:shelfId/:journalId\": journalView,\n        \"/demo/:shelfId/:journalId\": journalView,\n    })\n}\n","export * from \"./GapiErrors\"\nexport * from \"./SyncerError\"\nexport * from \"./FriendlyError\"\n","export * from \"./tagFactory\"\nexport * from \"./shelfFactory\"\nexport * from \"./entryFactory\"\n","export * from \"./graphComponent\"\nexport * from \"./googleComponent\"\nexport * from \"./errorsComponent\"\nexport * from \"./composeComponent\"\nexport * from \"./entriesComponent\"\nexport * from \"./shelvesComponent\"\nexport * from \"./refinesComponent\"\nexport * from \"./graphBarComponent\"\nexport * from \"./testModeComponent\"\nexport * from \"./journalsComponent\"\nexport * from \"./syncStateComponent\"\nexport * from \"./searchbarComponent\"\nexport * from \"./addShelvesComponent\"\nexport * from \"./breadcrumbComponent\"","export * from \"./UrlModel\"\nexport * from \"./TagModel\"\nexport * from \"./EntryModel\"\nexport * from \"./ShelfModel\"\nexport * from \"./SyncerModel\"\nexport * from \"./SearchModel\"\nexport * from \"./GoogleModel\"\nexport * from \"./SearchModel\"\nexport * from \"./ErrorsModel\"\nexport * from \"./JournalModel\"\nexport * from \"./LibraryModel\"\nexport * from \"./AppStateModel\"\nexport * from \"./ServiceWorkerModel\"\n","export enum SearchType {\n    NONE,\n    AND,\n    OR,\n}\n","import { TestMode } from \"./testing\"\n\nexport type SyncerPayload = (\n    GetRowsPayload | GetSpreadsheetPayload | UpdateRowPayload |\n    ExtendSheetPayload | DeleteRowPayload | TestModeUpdatePayload |\n    AuthUpdatePayload | UnpausePayload | SyncStatePayload | ErrorPayload |\n    TokenRequestPayload | CreateRowPayload\n)\n\nexport enum SyncerPayloadType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    TEST_MODE_UPDATE,\n    UNPAUSE,\n    GET_SPREADSHEET,\n    EXTEND_SHEET,\n    CREATE_ROW,\n    MOVE_ROW,\n    ERROR,\n    TOKEN_REQUEST,\n    SYNC_STATE,\n}\n\nexport enum SyncerResponseType {\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n    INITIALIZING = \"cloud_queue\",\n}\n\nexport interface TestModeUpdatePayload {\n    type: SyncerPayloadType.TEST_MODE_UPDATE\n    testMode: TestMode\n    rejects: boolean\n}\n\nexport interface AuthUpdatePayload {\n    type: SyncerPayloadType.AUTH_UPDATE\n    token: string\n    rejects: boolean\n}\n\nexport interface UnpausePayload {\n    type: SyncerPayloadType.UNPAUSE\n    rejects: boolean\n}\n\nexport interface DeleteRowPayload {\n    type: SyncerPayloadType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    rejects: boolean\n}\n\nexport interface CreateRowPayload {\n    type: SyncerPayloadType.CREATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    rejects: boolean\n}\n\nexport interface ExtendSheetPayload {\n    type: SyncerPayloadType.EXTEND_SHEET\n    spreadsheetId: string\n    sheetId: number\n    rejects: boolean\n}\n\nexport interface UpdateRowPayload {\n    type: SyncerPayloadType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n    rejects: boolean\n}\n\nexport interface GetSpreadsheetPayload {\n    type: SyncerPayloadType.GET_SPREADSHEET\n    spreadsheetId: string\n    spreadsheet?: gapi.client.sheets.Spreadsheet\n    rejects: boolean\n}\n\nexport interface GetRowsPayload {\n    type: SyncerPayloadType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    rows: string[]\n    rejects: boolean\n}\n\nexport interface SyncStatePayload {\n    type: SyncerPayloadType.SYNC_STATE\n    length: number\n    state: SyncerState\n    rejects: boolean\n}\n\nexport interface ErrorPayload {\n    type: SyncerPayloadType.ERROR\n    error: Error\n    pause: boolean\n    friendlyMsg: string\n    rejects: boolean\n}\n\nexport interface TokenRequestPayload {\n    type: SyncerPayloadType.TOKEN_REQUEST\n    rejects: boolean\n}\n","export enum TestMode {\n    OFF = \"0\",\n    WORKING = \"1\",\n    FAIL_GET_SPREADSHEET_SHEETS = \"2\",\n    FAIL_GET_RANGE = \"3\",\n    FAIL_UPDATE_RANGE = \"4\",\n    FAIL_DELETE_ROW = \"5\",\n    RETURN_ROWS = \"6\",\n    DEMO = \"demomode\"\n}\n\nexport function instanceOfTestMode(str: string): str is TestMode {\n    return ((<any>Object).values(TestMode).includes(str))\n}\n","export enum ViewMode {\r\n    COMPOSE,\r\n    READ,\r\n    GRAPH,\r\n}\r\n","import { ErrorPayload, SyncerPayloadType } from \"../types\"\n\nexport class SyncerError extends Error {\n    public payload: ErrorPayload\n\n    constructor(errorMsg: string, public friendlyMsg: string, public needsReAuth: boolean, pause?: boolean, rejects?: boolean) {\n        super(errorMsg)\n        this.payload = {\n            pause: (pause !== undefined) ? pause : true,\n            error: this,\n            friendlyMsg: this.friendlyMsg,\n            type: SyncerPayloadType.ERROR,\n            rejects: (rejects !== undefined) ? rejects : false,\n        }\n    }\n}\n","export class FriendlyError extends Error {\n    public msg: string\n    public friendlyMsg: string\n\n    constructor(errorMsg: string, friendlyMsg: string) {\n        super(errorMsg)\n        this.msg = errorMsg\n        this.friendlyMsg = friendlyMsg\n    }\n}\n","import m from \"mithril\"\nimport { libraryModel, urlModel } from \"..\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport const urlController = {\n    redirect: redirect,\n    getActiveShelf: getActiveShelf,\n    getActiveJournal: getActiveJournal,\n    getBreadcrumbTrail: getBreadcrumbTrail,\n}\n\nfunction redirect(hash: string) {\n    urlModel.hash = hash\n}\n\nfunction getActiveShelf(): ShelfModel | undefined {\n    let id = urlModel.shelfId\n    if (id === undefined) return undefined\n    return libraryModel.shelves.get(id)\n}\n\nfunction getActiveJournal(): JournalModel | undefined {\n    let id = urlModel.journalId\n    let shelf = getActiveShelf()\n    if (id === undefined || shelf === undefined) return undefined\n    return shelf.journals.get(id)\n}\n\nfunction getBreadcrumbTrail() {\n    let breadcrumb: m.Vnode[] = []\n    let hash = urlModel.hash.split(\"?\")[0].split(\"/\").filter(crumb => crumb !== \"#\" && crumb !== \"\")\n    let shelfId: string | undefined = undefined\n    for (let i = 0; i < hash.length; i++) {\n        let crumb = hash[i]\n        let trail = \"#/\" + hash.slice(0, i + 1).join(\"/\")\n        if (i === 1) {\n            shelfId = crumb\n            crumb = libraryModel.shelves.get(crumb)?.title || crumb\n        } else if (i === 2 && shelfId !== undefined) {\n            crumb = libraryModel.shelves.get(shelfId)?.journals.get(parseInt(crumb))?.title || crumb\n        }\n        if (i !== 0) breadcrumb.push(m(\"span\", \" / \"))\n        if (i === hash.length - 1) {\n            breadcrumb.push(m(\"span\", `${crumb}`))\n        } else {\n            breadcrumb.push(m(\"a\", {\n                href: trail,\n                id: `bc-${trail.replace(\"#\", \"\").replace(\"/\", \"\")}`,\n            }, `${crumb}`))\n        }\n    }\n    return breadcrumb\n}\n","import { textController } from \".\"\nimport { tagFactory } from \"../factories\"\nimport { JournalEntryModel, TagModel, BaseEntryModel } from \"../models\"\n\nconst tagPattern = /(\\@)([\\w-']+)+(:)?([\\w-'\\*]+)?/g\n\nexport const entryController = {\n    save: save,\n    update: update,\n}\n\nfunction save(entry: JournalEntryModel, content: string) {\n    entry.saved = content\n    entry.savedClean = textController.clean(entry.saved)\n    entry.tags = getTags(entry.tagMatches)\n}\n\nfunction update(entry: BaseEntryModel | JournalEntryModel, content: string) {\n    entry.raw = content\n    entry.clean = textController.clean(content)\n    entry.safe = textController.escape(entry.raw)\n    entry.tokens = tokenize(entry.clean)\n    entry.tagMatches = getTagMatches(entry.safe)\n    entry.rendered = render(entry.safe, entry.tagMatches)\n}\n\nfunction render(text: string, tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): string {\n    for (let { tag, match } of tagMatches) {\n        let chars = text.split(\"\")\n        chars.splice(match.index!, match[0].length, tag.rendered)\n        text = chars.join(\"\")\n    }\n    return text\n}\n\nfunction getTags(tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): Map<string, TagModel> {\n    let tags: Map<string, TagModel> = new Map()\n    for (let { tag } of tagMatches) {\n        if (tags.has(tag.clean)) {\n            tags.get(tag.clean)!.frq += 1\n        } else {\n            tags.set(tag.clean, tag)\n        }\n    }\n    return tags\n}\n\nfunction getTagMatches(text: string): { tag: TagModel, match: RegExpMatchArray }[] {\n    let tagMatches = []\n    let matchesIter = text.matchAll(tagPattern)\n    for (let match of matchesIter) {\n        let tag = tagFactory.createTag(match[0], match[1], match[2], match[3], match[4])\n        tagMatches.push({ tag: tag, match: match })\n    }\n    tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\n    return tagMatches\n}\n\nfunction tokenize(text: string): string[] {\n    let tokens = text.split(\" \")\n    return tokens.filter(token => {\n        return token !== undefined && token.trim() !== \"\" && token !== \"-\"\n    })\n}\n","import { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { TagModel, BaseEntryModel } from \".\"\n\nexport class SearchModel {\n    private static instance: SearchModel\n\n    public searchType: SearchType = SearchType.NONE\n    public simpleRefines: Map<string, TagModel> = new Map()\n    public complexRefines: Map<string, TagModel[]> = new Map()\n    public barQuery: BaseEntryModel = entryFactory.createBaseEntry()\n    public graphFilter: BaseEntryModel = entryFactory.createBaseEntry()\n    public refinesQuery: {\n        keys: Set<string>,\n        vals: Map<string, TagModel>,\n        simpleKeys: Map<string, TagModel>\n    } = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n\n    private constructor() { }\n\n    static getInstance(): SearchModel {\n        return (!SearchModel.instance) ? new SearchModel() : SearchModel.instance\n    }\n\n    get graphFilterQuery(): BaseEntryModel {\n        return entryFactory.createBaseEntry(this.graphFilter.raw)\n    }\n\n    get query(): BaseEntryModel {\n        return entryFactory.createBaseEntry([\n            this.barQuery.raw,\n            ...Array.from(this.refinesQuery.keys.values()),\n            ...Array.from(this.refinesQuery.vals.keys()),\n            ...Array.from(this.refinesQuery.simpleKeys.keys())\n        ].join(\" \"))\n    }\n}\n","import m from \"mithril\"\nimport { errorsController } from \".\"\nimport { googleModel, syncerModel } from \"..\"\nimport { SyncerPayloadType, TestMode, SyncerPayload, ErrorPayload } from \"../types\"\n\nconst worker = new Worker(\"./js/syncWebWorker.js\")\nworker.onmessage = (msg: MessageEvent) => onMessage(msg)\n\nexport const syncerController = {\n    unpause: unpause,\n    getRows: getRows,\n    createRow: createRow,\n    deleteRow: deleteRow,\n    updateRow: updateRow,\n    updateAuth: updateAuth,\n    updateTestMode: updateTestMode,\n    getSpreadsheet: getSpreadsheet,\n}\n\nasync function updateTestMode(testMode: TestMode) {\n    return await syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.TEST_MODE_UPDATE,\n        testMode: testMode,\n        rejects: false,\n    }, worker)\n}\n\nfunction updateAuth(token: string | undefined) {\n    if (token === undefined) return\n    return syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.AUTH_UPDATE,\n        token: token,\n        rejects: false,\n    }, worker)\n}\n\nfunction getSpreadsheet(spreadsheetId: string) {\n    let spreadsheet: gapi.client.sheets.Spreadsheet | undefined = undefined\n    return syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.GET_SPREADSHEET,\n        spreadsheetId: spreadsheetId,\n        spreadsheet: spreadsheet,\n        rejects: true,\n    }, worker)\n}\n\nasync function createRow(shelfId: string, journalId: number, idx: number) {\n    return await syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.CREATE_ROW,\n        spreadsheetId: shelfId,\n        sheetId: journalId,\n        idx: idx,\n        rejects: false,\n    }, worker)\n}\n\nfunction getRows(shelfId: string, journalId: number, journalTitle: string) {\n    let rows: string[] = []\n    return syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.GET_ROWS,\n        spreadsheetId: shelfId,\n        sheetTitle: journalTitle,\n        sheetId: journalId,\n        rows: rows,\n        rejects: true,\n    }, worker)\n}\n\nasync function updateRow(shelfId: string, journalId: number, journalTitle: string, idx: number, content: string) {\n    return await syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.UPDATE_ROW,\n        spreadsheetId: shelfId,\n        sheetTitle: journalTitle,\n        sheetId: journalId,\n        content: content,\n        idx: idx,\n        rejects: false,\n    }, worker)\n}\n\nasync function deleteRow(shelfId: string, journalId: number, idx: number) {\n    return await syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.DELETE_ROW,\n        spreadsheetId: shelfId,\n        sheetId: journalId,\n        idx: idx,\n        rejects: false,\n    }, worker)\n}\n\n// TODO - NICE TO HAVE\n// async function moveRow() {}\n\nasync function unpause() {\n    return await syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.UNPAUSE,\n        rejects: false,\n    }, worker)\n}\n\nfunction onMessage(msg: MessageEvent) {\n    let { id, payload, error }: { id: string | null, payload: SyncerPayload, error: ErrorPayload } = msg.data\n    if (id !== null && syncerModel.requests.has(id)) {\n        syncerModel.requests.get(id)!({ payload, error })\n    } else if (payload !== undefined) {\n        switch (payload.type) {\n            case SyncerPayloadType.SYNC_STATE:\n                syncerModel.state = payload.state\n                m.redraw()\n                break\n            case SyncerPayloadType.ERROR:\n                errorsController.add(payload.error.message, payload.friendlyMsg)\n                break\n            case SyncerPayloadType.TOKEN_REQUEST:\n                updateAuth(googleModel.token)\n                break\n        }\n    } else {\n        errorsController.add(\"undefined payload\", \"An unexpected error occurred.\")\n    }\n}\n","export * from \"./shelfView\"\nexport * from \"./signinView\"\nexport * from \"./libraryView\"\nexport * from \"./journalView\"\nexport * from \"./testModeView\"\n","import m from \"mithril\"\nimport {\n    googleComponent, journalsComponent, syncStateComponent, breadcrumbComponent,\n    testModeComponent, errorsComponent\n} from \"../components\"\n\nexport function shelfView() {\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(errorsComponent),\n            m(breadcrumbComponent),\n            m(journalsComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\nimport cytoscape from \"cytoscape\"\nimport { JournalEntryModel } from \"../models\"\nimport { searchController, urlController } from \"../controllers\"\nimport { searchModel } from \"..\"\n\ninterface TagNodeData { score: number, }\ninterface TagEdgeData { score: number, source: string, target: string }\n\nexport function graphComponent() {\n    const cy: cytoscape.Core = cytoscape({ headless: true })\n    const s: cytoscape.Stylesheet[] = [\n        {\n            \"selector\": \"node\",\n            \"style\": {\n                \"shape\": \"ellipse\",\n                \"width\": \"mapData(score, 0, 1, 20, 50)\",\n                \"height\": \"mapData(score, 0, 1, 20, 50)\",\n                \"content\": \"data(id)\",\n                \"font-size\": \"12px\",\n                \"text-valign\": \"center\",\n                \"text-halign\": \"center\",\n                \"background-color\": \"#555\",\n                \"text-outline-color\": \"#555\",\n                \"text-outline-width\": \"2px\",\n                \"color\": \"#fff\",\n                \"overlay-padding\": \"6px\",\n                \"z-index\": 10,\n            }\n        },\n        {\n            \"selector\": \"edge\",\n            \"style\": {\n                \"curve-style\": \"straight\",\n                \"opacity\": 1,\n                \"line-color\": \"mapData(score, 0, 1, blue, red)\",\n                \"width\": \"mapData(score, 0, 1, 0.1, 3)\",\n                \"overlay-padding\": \"3px\",\n                \"target-arrow-shape\": \"none\"\n            }\n        }\n    ]\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        drawGraph(searchController.filteredEntries(journal.entries)\n            .map(({ entry }) => entry)\n        )\n        return m(\"#graphContainer\", m(\"#graph\", {\n            oncreate: vnode => mountGraph(vnode.dom)\n        }))\n    }\n\n    function mountGraph(target: Element) {\n        if (target !== null) {\n            cy.mount(target)\n        }\n    }\n\n    function graphFilterContinue(text: string) {\n        for (let token of searchModel.graphFilterQuery.tokens) {\n            if (token.startsWith(\"-\") && text.includes(token.substring(1))) return true\n            if (!token.startsWith(\"-\") && !text.includes(token)) return true\n        }\n        return false\n    }\n\n    function drawGraph(entries: JournalEntryModel[]) {\n        let tagNodes: Map<string, TagNodeData> = new Map()\n        let tagEdges: Map<string, TagEdgeData> = new Map()\n        for (let entry of entries) {\n            for (let [, sourceTag] of entry.tags) {\n                if (sourceTag.separator === undefined || sourceTag.separator === null) continue\n                if (sourceTag.cleanVal === undefined || sourceTag.cleanVal === null) continue\n                if (graphFilterContinue(sourceTag.clean)) continue\n\n                let source = titleCase(sourceTag.cleanVal.toLowerCase().split(\"_\").join(\" \"))\n                if (!tagNodes.has(source)) {\n                    tagNodes.set(source, { score: 0 })\n                }\n                tagNodes.get(source)!.score += 1\n\n                for (let [, targetTag] of entry.tags) {\n                    if (targetTag.cleanVal === undefined || targetTag.cleanVal === null) continue\n                    if (graphFilterContinue(targetTag.clean)) continue\n                    let target = titleCase(targetTag.cleanVal.toLowerCase().split(\"_\").join(\" \"))\n                    if (target === source) continue\n\n                    let id = [source, target].sort().join(\"\")\n                    if (!tagEdges.has(id)) {\n                        tagEdges.set(id, { source: source, target: target, score: 0 })\n                    }\n                    tagEdges.get(id)!.score += 1\n                }\n            }\n        }\n\n        let highestNodeScore = 0\n        for (let [, node] of tagNodes) {\n            let score = node.score / tagNodes.size\n            if (score > highestNodeScore) highestNodeScore = score\n            node.score = score\n        }\n        let hightestEdgeScore = 0\n        for (let [, edge] of tagEdges) {\n            let score = edge.score / tagEdges.size\n            if (score > hightestEdgeScore) hightestEdgeScore = score\n            edge.score = score\n        }\n\n        let els: cytoscape.ElementsDefinition = { nodes: [], edges: [] }\n        for (let [id, node] of tagNodes) {\n            els.nodes.push({ data: { id: id, score: node.score / highestNodeScore } })\n        }\n        for (let [id, edge] of tagEdges) {\n            els.edges.push({ data: { id: id, score: edge.score / hightestEdgeScore, source: edge.source, target: edge.target } })\n        }\n\n        cy.elements().remove()\n        cy.add(els.nodes)\n        cy.add(els.edges)\n        cy.style(s)\n        // https://js.cytoscape.org/#layouts/cose\n        let layout = {\n            name: 'cose',\n            idealEdgeLength: 100,\n            nodeOverlap: 20,\n            refresh: 20,\n            fit: true,\n            padding: 0,\n            randomize: false,\n            componentSpacing: 100,\n            nodeRepulsion: 200000,\n            edgeElasticity: 50,\n            nestingFactor: 2,\n            gravity: 50,\n            numIter: 1000,\n            initialTemp: 500,\n            coolingFactor: 0.95,\n            minTemp: 2,\n            nodeDimensionsIncludeLabels: true\n        }\n        cy.layout(layout).run()\n    }\n\n    function titleCase(s: string) {\n        return s.replace(/\\w\\S*/g, function (txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase() })\n    }\n\n    return {\n        view: view,\n    }\n}\n","module.exports = cytoscape;","export const textController = {\n    escape: escape,\n    clean: clean,\n}\n\nfunction escape(unsafe: string): string {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n}\n\nfunction clean(content: string): string {\n    return content.toLowerCase()\n}\n","import { textController } from \"../controllers\"\nimport { TagModel } from \"../models\"\n\nexport const tagFactory = {\n    createTag: createTag\n}\n\nfunction createTag(raw: string, flag: string, key: string, separator?: string | null, val?: string | null) {\n    separator = (separator !== undefined) ? separator : null\n    val = (val !== undefined) ? val : null\n    let clean = cleanTagString(raw)\n    let cleanKey = cleanTagString(key)\n    let cleanVal = (val !== null) ? cleanTagString(val) : null\n\n    let renderedKey = \"<span onclick=\\\"tagOnClick(event, '\"\n        + flag\n        + cleanKey\n        + ((separator !== null) ? separator : \"\")\n        + \"')\\\" class=\\\"\"\n        + ((separator !== null) ? \"tagKey\" : (val === null) ? \"simpleTag\" : \"roundTagVal\")\n        + \"\\\">\"\n        + flag\n        + key\n        + \"</span>\"\n\n    let renderedVal = \"\"\n\n    if (separator !== undefined && separator !== null) {\n        renderedVal = \"<span onclick=\\\"tagOnClick(event, '\"\n            + flag\n            + cleanKey\n            + separator\n            + ((cleanVal !== null) ? cleanVal.replace(/'/, \"\\\\'\") : \"\")\n            + \"')\\\" class=\\\"tagVal\\\">\"\n            + separator\n            + ((val !== null) ? val : \"\")\n            + \"</span>\"\n    }\n\n    return new TagModel(raw, flag, key, separator, val, clean, cleanKey, cleanVal, renderedKey + renderedVal)\n\n}\n\nfunction cleanTagString(str: string) {\n    str = textController.escape(str)\n    str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\n    str = str.toLowerCase()\n    return str\n}\n","import m from \"mithril\"\n\nexport class UrlModel {\n    private static instance: UrlModel\n\n    private constructor() { }\n\n    static getInstance(): UrlModel {\n        return (!UrlModel.instance) ? new UrlModel() : UrlModel.instance\n    }\n\n    get hash(): string {\n        return window.location.hash\n    }\n    set hash(hash_: string) {\n        window.location.hash = hash_\n    }\n\n    get url(): URL {\n        return new URL(window.location.href)\n    }\n\n    public getParam(key: string): string | undefined {\n        let val = this.url.searchParams.get(key) || m.route.param(key)\n        if (val === \"\") return\n        return val\n    }\n\n    get shelfId(): string | undefined {\n        let id = m.route.param(\"shelfId\")\n        return (id === \"\") ? undefined : id\n    }\n\n    get journalId(): number | undefined {\n        let id = m.route.param(\"journalId\")\n        return (id === \"\") ? undefined : parseInt(id)\n    }\n\n    get newTestMode(): string | undefined {\n        let mode = m.route.param(\"testMode\")\n        return (mode === \"\") ? undefined : mode\n    }\n\n}\n","export class TagModel {\n    public frq: number\n\n    constructor(\n        public raw: string,\n        public flag: string,\n        public key: string,\n        public separator: string | null,\n        public val: string | null,\n        public clean: string,\n        public cleanKey: string,\n        public cleanVal: string | null,\n        public rendered: string\n    ) { \n        this.frq = 1\n    }\n\n}\n","import { TagModel } from \".\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport class BaseEntryModel {\n    public raw: string = \"\"\n    public safe: string = \"\"\n    public clean: string = \"\"\n    public tokens: string[] = []\n    public rendered: string = \"\"\n    public tags: Map<string, TagModel> = new Map()\n    public tagMatches: { tag: TagModel, match: RegExpMatchArray }[] = []\n}\n\nexport class JournalEntryModel extends BaseEntryModel {\n    readonly id: number\n    readonly shelf: ShelfModel\n    readonly journal: JournalModel\n\n    public saved: string = \"\"\n    public savedClean: string = \"\"\n\n    constructor(shelf: ShelfModel, journal: JournalModel, entryId: number) {\n        super()\n        this.id = entryId\n        this.shelf = shelf\n        this.journal = journal\n    }\n}\n","import { JournalModel } from \".\"\n\nexport class ShelfModel {\n    readonly id: string\n    readonly title: string | undefined\n\n    public error: boolean\n    public journals: Map<number, JournalModel> = new Map()\n\n    constructor(id: string, title?: string, error?: boolean) {\n        this.id = id\n        this.title = title\n        this.error = (error === undefined) ? false : error\n    }\n\n}\n","import m from \"mithril\"\nimport { errorsController } from \"../controllers\"\nimport { SyncerState, SyncerPayload, ErrorPayload } from \"../types\"\n\nexport class SyncerModel {\n    private static instance: SyncerModel\n\n    public requestsCounter: number\n    public requests: Map<string, Function>\n    public state: SyncerState\n\n    private constructor() {\n        this.requestsCounter = 0\n        this.requests = new Map()\n        this.state = SyncerState.INITIALIZING\n    }\n\n    static getInstance(): SyncerModel {\n        return (!SyncerModel.instance) ? new SyncerModel() : SyncerModel.instance\n    }\n\n    public pushSyncerTask<P extends SyncerPayload>(payload: P, worker: Worker): Promise<P> {\n        let id = `payload-${this.requestsCounter++}`\n        return new Promise((resolve, reject) => {\n            this.requests.set(id, ({ payload, error }: { payload: P, error: ErrorPayload }) => {\n                if (error && error.rejects) {\n                    this.requests.delete(id)\n                    reject(error)\n                } else if (error) {\n                    errorsController.add(error.error.message, error.friendlyMsg)\n                    m.redraw()\n                } else {\n                    this.requests.delete(id)\n                    resolve(payload)\n                }\n            })\n            worker.postMessage({ id, payload })\n        })\n    }\n\n}\n","import { MockGapi, MockGoogleUser } from \"../mocks\"\n\nexport class GoogleModel {\n    private static instance: GoogleModel\n\n    readonly src: string\n    readonly scope: string\n    readonly clientId: string\n\n    public isSignedIn: boolean | undefined\n    public gapi_: MockGapi | typeof gapi | undefined\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | undefined\n\n    private constructor() {\n        this.isSignedIn = false\n        this.src = \"https://apis.google.com/js/api.js\"\n        this.scope = [\n            \"https://www.googleapis.com/auth/spreadsheets\",\n        ].join(\" \")\n        this.clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\n    }\n\n    static getInstance() {\n        return (!GoogleModel.instance) ? new GoogleModel() : GoogleModel.instance\n    }\n\n    get token(): string | undefined {\n        if (!this.user) return\n        let auth = this.user.getAuthResponse()\n        return auth.access_token\n    }\n}\n","import { FriendlyError } from \"../errors\"\n\nexport class ErrorsModel {\n    private static instance: ErrorsModel\n\n    public errors: FriendlyError[] = []\n\n    private constructor() {}\n\n    add(error: FriendlyError) {\n        this.errors.push(error)\n    }\n\n    remove(idx: number) {\n        this.errors.splice(idx, 1)\n    }\n\n    static getInstance(): ErrorsModel {\n        return (!ErrorsModel.instance) ? new ErrorsModel() : ErrorsModel.instance\n    }\n}\n","import { ShelfModel } from \"./ShelfModel\"\nimport { JournalEntryModel, TagModel } from \".\"\nimport { ViewMode } from \"../types\"\n\nexport class JournalModel {\n    readonly id: number\n    readonly title: string\n    readonly shelf: ShelfModel\n\n    public loaded: boolean\n    public viewMode: ViewMode\n    public tags: Map<string, TagModel>\n    public entries: { id: number, entry: JournalEntryModel }[]\n\n    constructor(shelf: ShelfModel, journalId: number, journalTitle: string) {\n        this.entries = []\n        this.shelf = shelf\n        this.loaded = false\n        this.id = journalId\n        this.tags = new Map()\n        this.title = journalTitle\n        this.viewMode = ViewMode.COMPOSE\n    }\n\n    public createEntry(idx: number, entry: JournalEntryModel) {\n        this.entries.splice(idx, 0, { id: entry.id, entry })\n    }\n\n    public deleteEntry(idx: number) {\n        this.entries.splice(idx, 1)\n    }\n\n    public moveEntry(fromIdx: number, toIdx: number) {\n        this.entries.splice(toIdx, 0, this.entries.splice(fromIdx, 1)[0])\n    }\n\n}\n","import { ShelfModel } from \".\"\n\nexport class LibraryModel {\n    private static instance: LibraryModel\n    \n    public shelves: Map<string, ShelfModel | undefined>\n\n    private constructor() {\n        this.shelves = new Map()\n        this.shelfIds.forEach(id => this.shelves.set(id, undefined))\n    }\n\n    static getInstance() {\n        return (!LibraryModel.instance) ? new LibraryModel() : LibraryModel.instance\n    }\n\n    set shelfIds(ids: string[]) {\n        if (ids.length === 0) {\n            localStorage.removeItem(\"spreadsheetIds\")\n        } else {\n            localStorage.setItem(\"spreadsheetIds\", ids.join(\",\"))\n        }\n    }\n    get shelfIds(): string[] {\n        let ids = localStorage.getItem(\"spreadsheetIds\")\n        return (ids === null) ? [] : ids.split(\",\")\n    }\n}\n","import { TestMode } from \"../types\"\n\nexport class AppStateModel {\n    private static instance: AppStateModel\n\n    public testMode: TestMode\n\n    private constructor() {\n        this.testMode = TestMode.OFF\n    }\n\n    static getInstance(): AppStateModel {\n        return (!AppStateModel.instance) ? new AppStateModel() : AppStateModel.instance\n    }\n}\n","import { errorsController } from \"../controllers\"\n\nexport class ServiceWorkerModel {\n    private static instance: ServiceWorkerModel\n\n    private constructor() {\n        if (\"serviceWorker\" in navigator) {\n            window.addEventListener(\"load\", async () => {\n                await navigator.serviceWorker.register(\"../serviceWorker.js\")\n            })\n        } else {\n            errorsController.add(\"serviceWorker not supported\", \"Your browser is not supported.\")\n        }\n    }\n\n    static getInstance(): ServiceWorkerModel {\n        return (!ServiceWorkerModel.instance) ? new ServiceWorkerModel() : ServiceWorkerModel.instance\n    }\n}\n","import { ShelfModel, JournalModel } from \"../models\"\n\nexport const shelfFactory = {\n    createShelf: createShelf,\n}\n\nfunction createShelf(spreadsheetId: string, spreadsheet?: gapi.client.sheets.Spreadsheet, error?: boolean): ShelfModel {\n    if (\n        spreadsheet !== undefined &&\n        spreadsheet.spreadsheetId !== undefined &&\n        spreadsheet.properties !== undefined &&\n        spreadsheet.properties.title !== undefined &&\n        spreadsheet.sheets !== undefined\n    ) {\n        let shelf = new ShelfModel(spreadsheet.spreadsheetId, spreadsheet.properties.title)\n        getJournals(shelf, spreadsheet.sheets).forEach(journal => shelf.journals.set(journal.id, journal))\n        return shelf\n    }\n    return new ShelfModel(spreadsheetId, undefined, error)\n}\n\nfunction getJournals(shelf: ShelfModel, sheets: gapi.client.sheets.Sheet[]): JournalModel[] {\n    let journals: JournalModel[] = []\n    sheets.forEach(sheet => {\n        if (\n            sheet.properties !== undefined &&\n            sheet.properties.title !== undefined &&\n            sheet.properties.sheetId !== undefined\n        ) {\n            let journal = new JournalModel(\n                shelf, sheet.properties.sheetId, sheet.properties.title\n            )\n            if (journal === undefined) return\n            journals.push(journal)\n        }\n    })\n    return journals\n}\n","import { entryController } from \"../controllers\"\nimport { JournalEntryModel, ShelfModel, JournalModel, BaseEntryModel } from \"../models\"\n\nlet entryCounter = -1\n\nexport const entryFactory = {\n    createBaseEntry: createBaseEntry,\n    createJournalEntry: createJournalEntry\n}\n\nfunction createBaseEntry(content?: string) {\n    let entry = new BaseEntryModel()\n    entryController.update(entry, content || \"\")\n    return entry\n}\n\nfunction createJournalEntry(shelf: ShelfModel, journal: JournalModel, content: string) {\n    let entry = new JournalEntryModel(shelf, journal, entryCounter += 1)\n    entryController.update(entry, content)\n    return entry\n}\n","export const caretController = {\n    getCaretPosition: getCaretPosition,\n    setCaretPosition: setCaretPosition,\n}\n\nfunction node_walk(node: any, func: any): void {\n    var result = func(node)\n    for (node = node.firstChild; result !== false && node; node = node.nextSibling)\n        result = node_walk(node, func)\n    return\n}\n\nfunction getCaretPosition(elem: any) {\n    var sel: any = window.getSelection()\n    var cum_length = [0, 0]\n\n    if (sel.anchorNode == elem) {\n        cum_length = [sel.anchorNode.innerText.length, sel.extentNode.innerText.length]\n    } else {\n        var nodes_to_find = [sel.anchorNode, sel.extentNode]\n        if (!elem.contains(sel.anchorNode) || !elem.contains(sel.extentNode)) {\n            return undefined\n        } else {\n            var found = [0, 0]\n            var i\n            node_walk(elem, function (node: any): void {\n                for (i = 0; i < 2; i++) {\n                    if (node == nodes_to_find[i]) {\n                        found[i] = 1\n                        if (found[i == 0 ? 1 : 0]) {\n                            return\n                        }\n                    }\n                }\n                if (node.textContent && !node.firstChild) {\n                    for (i = 0; i < 2; i++) {\n                        if (!found[i]) {\n                            cum_length[i] += node.textContent.length\n                        }\n                    }\n                }\n            })\n            cum_length[0] += sel.anchorOffset\n            cum_length[1] += sel.extentOffset\n        }\n    }\n    if (cum_length[0] <= cum_length[1]) {\n        return cum_length\n    }\n    return [cum_length[1], cum_length[0]]\n}\n\nfunction setCaretPosition(el: any, pos: any): any {\n    if (el !== null && pos !== null) {\n        for (var node of el.childNodes) {\n            if (node.nodeType == 3) {\n                if (node.length >= pos) {\n                    let range = document.createRange()\n                    let sel: any = window.getSelection()\n                    range.setStart(node, pos)\n                    range.collapse(true)\n                    sel.removeAllRanges()\n                    sel.addRange(range)\n                    return -1\n                } else {\n                    pos -= node.length\n                }\n            } else {\n                pos = setCaretPosition(node, pos)\n                if (pos == -1) {\n                    return -1\n                }\n            }\n        }\n        return pos\n    }\n}\n","import { searchModel } from \"..\"\nimport { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { entryController } from \"./entryController\"\nimport { TagModel, JournalModel, JournalEntryModel } from \"../models\"\n\nexport const searchController = {\n    reset: reset,\n    buildRefines: buildRefines,\n    filteredEntries: filteredEntries,\n    updateSearchbar: updateSearchbar,\n    updateGraphFilterBar: updateGraphFilterBar,\n}\n\nfunction updateSearchbar(content: string) {\n    entryController.update(searchModel.barQuery, content)\n}\n\nfunction updateGraphFilterBar(content: string) {\n    entryController.update(searchModel.graphFilter, content)\n}\n\nfunction reset() {\n    searchModel.searchType = SearchType.NONE\n    searchModel.barQuery = entryFactory.createBaseEntry()\n    searchModel.refinesQuery = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n}\n\nfunction buildRefines(journal: JournalModel) {\n    let simpleRefines: Map<string, TagModel> = new Map()\n    let complexRefines: Map<string, TagModel[]> = new Map()\n\n    for (let tag of journal.tags.values()) {\n        if (tag.val === null) {\n            let key = `${tag.flag}${tag.cleanKey}`\n            if (!simpleRefines.has(key)) {\n                simpleRefines.set(key, tag)\n            }\n        } else {\n            let key = `${tag.flag}${tag.cleanKey}${tag.separator}`\n            if (!complexRefines.has(key)) { complexRefines.set(key, []) }\n            complexRefines.get(key)!.push(tag)\n        }\n    }\n\n    searchModel.simpleRefines = new Map([...simpleRefines.entries()])\n    searchModel.complexRefines = new Map([...complexRefines.entries()].sort())\n\n    cleanRefines()\n}\n\nfunction cleanRefines() {\n    // Clean stale simple tag key (refine val) selections\n    for (let [key,] of searchModel.refinesQuery.simpleKeys) {\n        if (!searchModel.simpleRefines.has(key)) {\n            searchModel.refinesQuery.simpleKeys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag key selections\n    for (let key of searchModel.refinesQuery.keys) {\n        if (!searchModel.complexRefines.has(key)) {\n            searchModel.refinesQuery.keys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag val\n    for (let [key,] of searchModel.refinesQuery.vals) {\n        if (!Array.from(searchModel.complexRefines.values()).some(tags => tags.some(tag => tag.clean === key))) {\n            searchModel.refinesQuery.vals.delete(key)\n        }\n    }\n}\n\nfunction filteredEntries(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    if (searchModel.query.tokens.length === 0) {\n        searchModel.searchType = SearchType.NONE\n        filteredEntries = entries.map(({ entry }, idx) => { return { idx, entry } })\n    } else {\n        searchModel.searchType = SearchType.AND\n        filteredEntries = search(entries)\n        if (filteredEntries.length === 0) {\n            searchModel.searchType = SearchType.OR\n            filteredEntries = search(entries)\n        }\n    }\n    return filteredEntries\n}\n\nfunction search(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let query = searchModel.query\n    let sourceEntries = entries\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    for (let [idx, { entry }] of sourceEntries.entries()) {\n        switch (searchModel.searchType) {\n            case SearchType.AND:\n                if (query.tokens.every(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n            case SearchType.OR:\n                if (query.tokens.some(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n        }\n    }\n    return filteredEntries\n}\n\nfunction match(token: string, entry: JournalEntryModel) {\n\n    if (token.startsWith(\"-@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token.substring(1)) === undefined\n    } else if (token.startsWith(\"-\")) {\n        return !entry.savedClean.includes(token.substring(1))\n    } else if (token.startsWith(\"@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token) !== undefined\n    } else {\n        return entry.savedClean.includes(token)\n    }\n}\n","import m from \"mithril\"\nimport { MockGapi } from \"../mocks\"\nimport { TestMode } from \"../types\"\nimport { googleModel, appStateModel } from \"..\"\nimport { syncerController, libraryController } from \"../controllers\"\nimport { urlController } from \"./urlController\"\n\nexport const googleController = {\n    signIn: signIn,\n    signOut: signOut,\n    initGapi: initGapi,\n}\n\nfunction signOut() {\n    googleModel.gapi_!.auth2.getAuthInstance().signOut()\n}\n\nfunction signIn() {\n    googleModel.gapi_!.auth2.getAuthInstance().signIn()\n}\n\nfunction initGapi() {\n    let gapi_ = (appStateModel.testMode === TestMode.OFF) ? gapi : new MockGapi()\n    googleModel.gapi_ = gapi_\n    googleModel.gapi_.load('auth2', () => {\n        googleModel.gapi_!.auth2.init({\n            scope: googleModel.scope, client_id: googleModel.clientId\n        }).then(() => {\n            googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.listen(isSignedIn)\n            isSignedIn((googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.get()))\n        })\n    })\n}\n\nasync function isSignedIn(signedIn: boolean) {\n    googleModel.isSignedIn = signedIn\n    if (googleModel.isSignedIn) {\n        googleModel.user = googleModel.gapi_!.auth2.getAuthInstance().currentUser.get()\n        syncerController.updateAuth(googleModel.token)\n        libraryController.loadShelves()\n    } else {\n        libraryController.removeShelves()\n        urlController.redirect(\"/\")\n    }\n    m.redraw()\n}\n","export * from \"./Gapi\"\n","export class MockGapi {\n    public auth2 = new MockAuth2()\n    public load(_api: string, _callback: () => void) {\n        _callback()\n    }\n}\n\nclass MockAuth2 {\n    public getAuthInstance() {\n        return new MockGoogleAuth()\n    }\n    public async init(_params: any) { }\n}\n\nclass MockCurrentUser {\n    public get() { return new MockGoogleUser() }\n}\n\nexport class MockGoogleUser {\n    public getAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n    public async reloadAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n}\n\nclass MockGoogleAuth {\n    public isSignedIn = new MockIsSignedIn()\n    public signOut() { }\n    public signIn() { }\n    public currentUser = new MockCurrentUser()\n}\n\nclass MockIsSignedIn {\n    public listen = (_callback: any) => { }\n    public get = () => { return true }\n}\n","import { errorsModel } from \"..\"\nimport { FriendlyError } from \"../errors\"\n\nexport const errorsController = {\n    add: add,\n    remove: remove,\n}\n\nfunction add(errorMsg: string, friendlyMsg: string) {\n    console.error(errorMsg)\n    errorsModel.add(new FriendlyError(errorMsg, friendlyMsg))\n}\n\nfunction remove(idx: number) {\n    errorsModel.remove(idx)\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ErrorPayload } from \"../types\"\nimport { shelfFactory } from \"../factories\"\nimport { urlController, journalController, syncerController, errorsController } from \"../controllers\"\n\nconst spreadsheetIdPattern = /\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/g\n\nexport const libraryController = {\n    addShelves: addShelves,\n    loadShelves: loadShelves,\n    removeShelves: removeShelves,\n    getSpreadsheetIdsFromUrls: getSpreadsheetIdsFromUrls,\n}\n\nfunction addShelves(urls: string) {\n    let ids = getSpreadsheetIdsFromUrls(urls)\n    ids = ids.filter(id => !libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.set(id, undefined))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n    loadShelves(false, ids)\n}\n\nfunction removeShelves(ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    ids = ids.filter(id => libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.delete(id))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n}\n\nfunction loadShelves(reloadLoaded?: boolean, ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    if (reloadLoaded) {\n        ids.forEach(id => libraryModel.shelves.set(id, undefined))\n        m.redraw()\n    }\n    ids.filter(id => !libraryModel.shelves.get(id))\n        .forEach(id => syncerController.getSpreadsheet(id)\n        .then(payload => {\n            let shelf = shelfFactory.createShelf(id, payload.spreadsheet)\n            libraryModel.shelves.set(shelf.id, shelf)\n            let journal = urlController.getActiveJournal()\n            if (journal && journal.shelf === shelf) {\n                journalController.loadEntries(journal)\n            }\n        })\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n            let shelf = shelfFactory.createShelf(id, undefined, true)\n            libraryModel.shelves.set(id, shelf)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n    )\n}\n\nfunction getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\n    let ids: string[] = []\n    if (urls) {\n        Array.from(urls.matchAll(spreadsheetIdPattern)).forEach(m => ids.push(m[1]))\n    }\n    return ids\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { tagFactory, entryFactory } from \"../factories\"\nimport { JournalEntryModel, JournalModel, TagModel } from \"../models\"\nimport { syncerController, searchController, entryController, errorsController } from \".\"\nimport { ErrorPayload } from \"../types\"\n\nexport const journalController = {\n    addEntry: addEntry,\n    createEntry: createEntry,\n    updateEntry: updateEntry,\n    moveEntry: moveEntry,\n    buildTags: buildTags,\n    deleteEntry: deleteEntry,\n    loadEntries: loadEntries,\n}\n\nfunction unloadOtherJournals(keepJournal: JournalModel) {\n    libraryModel.shelves.forEach(shelf => {\n        if (shelf === undefined) return\n        shelf.journals.forEach(journal => {\n            if (keepJournal.shelf.id !== journal.shelf.id || keepJournal.id !== journal.id) {\n                unloadEntries(journal)\n            }\n        })\n    })\n}\n\nfunction unloadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    journal.entries = []\n    journal.loaded = false\n}\n\nfunction loadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    unloadOtherJournals(journal)\n    syncerController.getRows(journal.shelf.id, journal.id, journal.title)\n        .then(payload => {\n            payload.rows.forEach((content, idx) => addEntry(journal, idx, content))\n            journal.loaded = true\n            m.redraw()\n        })\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n}\n\nfunction addEntry(journal: JournalModel, idx: number, content: string | undefined) {\n    content = (content === undefined) ? \"\" : content\n    let entry = entryFactory.createJournalEntry(journal.shelf, journal, content)\n    journal.createEntry(idx, entry)\n    entryController.save(entry, content)\n    buildTags(journal)\n}\n\nfunction createEntry(journal: JournalModel, idx: number, content?: string) {\n    content = (content === undefined) ? \"\" : content\n    let entry = entryFactory.createJournalEntry(journal.shelf, journal, content)\n    journal.createEntry(idx, entry)\n    entryController.save(entry, content)\n    syncerController.createRow(journal.shelf.id, journal.id, idx)\n    syncerController.updateRow(journal.shelf.id, journal.id, journal.title, idx, entry.raw)\n    buildTags(journal)\n}\n\nfunction updateEntry(journal: JournalModel, entry: JournalEntryModel, idx: number, content: string) {\n    if (entry.saved === content) return\n    entryController.save(entry, content)\n    syncerController.updateRow(journal.shelf.id, journal.id, journal.title, idx, entry.raw)\n    buildTags(journal)\n}\n\nfunction deleteEntry(journal: JournalModel, idx: number) {\n    journal.deleteEntry(idx)\n    syncerController.deleteRow(journal.shelf.id, journal.id, idx)\n    buildTags(journal)\n}\n\nfunction moveEntry(journal: JournalModel, fromIdx: number, toIdx: number) {\n    if (fromIdx === toIdx) return\n    journal.moveEntry(fromIdx, toIdx)\n    buildTags(journal)\n}\n\nfunction buildTags(journal: JournalModel) {\n    let tags: Map<string, TagModel> = new Map()\n    let entries = Array.from(journal.entries.values())\n    for (let { entry } of entries.reverse()) {\n        for (let [key, tag] of entry.tags) {\n            if (tags.has(key)) {\n                tags.get(key)!.frq += tag.frq\n            } else {\n                tags.set(key, tagFactory.createTag(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\n            }\n        }\n    }\n    journal.tags = tags\n    searchController.buildRefines(journal)\n}\n","import { appStateModel } from \"..\"\nimport { syncerController } from \"./syncerController\"\nimport { TestMode, instanceOfTestMode } from \"../types\"\n\nexport const appStateController = {\n    updateTestMode: updateTestMode,\n}\n\nfunction updateTestMode(mode: TestMode | string | undefined) {\n    if (mode !== undefined && instanceOfTestMode(mode) && mode !== appStateModel.testMode) {\n        appStateModel.testMode = mode\n        syncerController.updateTestMode(mode)\n    }\n}\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { googleController } from \"../controllers\"\n\nexport function googleComponent() {\n\n    function view() {\n        return m(\"#googleApi\", [\n            preambleMessage(),\n            signInOutButton(),\n            m(\"script\", gapiScriptSettings()),\n        ])\n    }\n\n    function gapiScriptSettings() {\n        return {\n            async: true,\n            defer: true,\n            src: googleModel.src,\n            onload: () => {\n                if (!googleModel.isSignedIn) {\n                    googleController.initGapi()\n                }\n            }\n        }\n    }\n\n    function signInOutButton() {\n        return (googleModel.isSignedIn)\n            ? m(\"button\", { onclick: () => googleController.signOut(), class: \"authButton\" }, \"Sign Out\")\n            : m(\"button\", { onclick: () => googleController.signIn(), class: \"authButton\" }, \"Sign In\")\n    }\n\n    function preambleMessage() {\n        return (googleModel.isSignedIn !== undefined && !googleModel.isSignedIn)\n            ? m(\".preamble\", \"PREAMBLE MSG\") // TODO: fill out\n            : null\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { errorsModel } from \"..\"\nimport { FriendlyError } from \"../errors\"\nimport { errorsController } from \"../controllers\"\n\nexport function errorsComponent() {\n\n    function view() {\n        return m(\"#errorsContainer\", errorsList())\n    }\n\n    function errorsList() {\n        if (errorsModel.errors.length !== 0) {\n            return m(\"#errors\", errorsModel.errors.map((error, idx) => errorVnode(error, idx)))\n        }\n        return null\n    }\n\n    function errorVnode(error: FriendlyError, idx: number) {\n        return m(\"div\", [\n            m(\"span\", { id: `error-${idx}`}, error.friendlyMsg),\n            m(\"button\", { \n                onclick: () => errorsController.remove(idx),\n                class: \"dismissErrorButton\",\n            }, \"Dismiss\"),\n        ])\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { BaseEntryModel, JournalModel } from \"../models\"\nimport { urlController, journalController, caretController, entryController } from \"../controllers\"\n\nexport function composeComponent() {\n    var caret: Caret = { el: null, pos: null }\n\n    const composePrefixEntry = entryFactory.createBaseEntry()\n    const composeContentEntry = entryFactory.createBaseEntry()\n    const composeSuffixEntry = entryFactory.createBaseEntry()\n\n    const prefixSettings = { \"placeholder\": \"Static Entry Prefix\" }\n    const entrySettings = { \"placeholder\": \"Entry Content\" }\n    const suffixSettings = { \"placeholder\": \"Static Entry Suffix\" }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#compose\", [\n            m(\n                \"#prefix\",\n                composeNodeSettings(composePrefixEntry, journal, prefixSettings),\n                m.trust(composePrefixEntry.rendered)\n            ),\n            m(\n                \"#content\",\n                composeNodeSettings(composeContentEntry, journal, entrySettings),\n                m.trust(composeContentEntry.rendered)\n            ),\n            m(\n                \"#suffix\",\n                composeNodeSettings(composeSuffixEntry, journal, suffixSettings),\n                m.trust(composeSuffixEntry.rendered)\n            ),\n        ])\n    }\n\n    function getComposedContent() {\n        let els = [\n            document.getElementById(\"prefix\"),\n            document.getElementById(\"content\"),\n            document.getElementById(\"suffix\"),\n        ]\n        return els.map(el => el!.innerText).join(\"\")\n    }\n\n    function composeNodeSettings(entry: BaseEntryModel, journal: JournalModel, extraSettings: object) {\n        let baseSettings = {\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: async (event: any) => await composeKeydown(event, journal),\n            oninput: (event: any) => composeInput(event, entry),\n            onupdate: () => composeUpdate(),\n        }\n        return Object.assign(baseSettings, extraSettings)\n    }\n\n    async function composeKeydown(event: any, journal: JournalModel) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            let content = getComposedContent()\n            entryController.update(composeContentEntry, \"\")\n            let idx = journal.entries.length\n            journalController.createEntry(journal, idx, content)\n        }\n    }\n\n    function composeInput(event: any, entry: BaseEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function composeUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { JournalModel, JournalEntryModel } from \"../models\"\nimport {\n    caretController, urlController, entryController, journalController, searchController\n} from \"../controllers\"\n\nexport function entriesComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        let shelf = urlController.getActiveShelf()\n        const journal = urlController.getActiveJournal()\n        if (!shelf || !journal) return null\n\n        return m(\"#entries\", [\n            m(\".tempguidancePre\", \"Entries\"),\n            entriesList(journal),\n        ])\n    }\n\n    function entriesList(journal: JournalModel) {\n        return searchController.filteredEntries(journal.entries)\n            .map(({ idx, entry }) => entryVnode(entry, idx))\n    }\n\n    function createEntryVnode(journal: JournalModel, idx: number): m.Vnode {\n        return m(\"button\", {\n            class: \"createEntry\",\n            id: `createEntry-${idx}`,\n            onclick: async () => journalController.createEntry(journal, idx)\n        }, \"ins\")\n    }\n\n    function entryVnode(entry: JournalEntryModel, entryIdx: number): m.Vnode {\n        return m(\".entryWrap\", {\n            id: `entry-${entry.id}`,\n            class: `entry-idx-${entryIdx}`\n        }, [\n            createEntryVnode(entry.journal, entryIdx),\n            entryContent(entry, entryIdx),\n            deleteEntryButton(entry, entryIdx),\n            createEntryVnode(entry.journal, entryIdx+1),\n        ])\n    }\n\n    function deleteEntryButton(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"button\", {\n            id: `del-entry-${entry.id}`,\n            class: `del del-entry-idx-${entryIdx}`,\n            onclick: async () => journalController.deleteEntry(entry.journal, entryIdx)\n        }, \"del\")\n    }\n\n    function entryContent(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"div\", entryContentSettings(entry, entryIdx), m.trust(entry.rendered))\n    }\n\n    function onEntryKeydown(event: any) {\n        event.redraw = false\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function onEntryInput(event: any, entry: JournalEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function onEntryUpdate(event: any) {\n        event.redraw = false\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    async function onEntryBlur(event: any, entry: JournalEntryModel, entryIdx: number) {\n        event.redraw = false\n        journalController.updateEntry(entry.journal, entry, entryIdx, event.target.innerText)\n    }\n\n    function entryContentSettings(entry: JournalEntryModel, entryIdx: number) {\n        return {\n            id: `entry-${entry.id}-content`,\n            contenteditable: \"true\",\n            class: `entry breakwrap column entry-idx-${entryIdx}-content`,\n            onkeydown: (event: any) => onEntryKeydown(event),\n            oninput: (event: any) => onEntryInput(event, entry),\n            onupdate: (event: any) => onEntryUpdate(event),\n            onblur: (event: any) => onEntryBlur(event, entry, entryIdx),\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ShelfModel } from \"../models\"\nimport { libraryController } from \"../controllers\"\n\nexport function shelvesComponent() {\n\n    function view() {\n        let shelves = Array.from(libraryModel.shelves.entries())\n        return m(\"#shelvesList\", shelves.map(([id, shelf]) => shelfNode(id, shelf)))\n    }\n\n    function delShelfButton(id: string) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: () => libraryController.removeShelves([id])\n        }, \"del\")\n    }\n\n    function retryShelfLoadButton(id: string) {\n        return m(\"button\", {\n            onclick: () => libraryController.loadShelves(true, [id])\n        }, \"retry\")\n    }\n\n    function shelfNode(id: string, shelf: ShelfModel | undefined) {\n        if (shelf === undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", id)\n            ])\n        } else if (shelf.error) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", { class: \"solidError\" }, `${id}`),\n                retryShelfLoadButton(id)\n            ])\n        } else {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"a\", {\n                    href: `#/library/${id}`,\n                    id: `shelf-${id}`\n                }, shelf.title)\n            ])\n        }\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { urlController } from \"../controllers\"\nimport { TagModel } from \"../models\"\n\nexport function refinesComponent() {\n    const simpleTagsHeader = \"Simple Tags\"\n    const expanded: Set<string> = new Set()\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#tagsWrap\", m(\"#tags\", [\n            m(\".tempguidancePre\", \"Tags\"),\n            simpleRefinesVnodes(),\n            complexRefinesVnodes(),\n        ]))\n    }\n\n    function simpleRefinesVnodes() {\n        if (searchModel.simpleRefines.size === 0) return\n        return m(\".tagRefineWrap\", [\n            refineKeyVnode(simpleTagsHeader, searchModel.simpleRefines.size),\n            Array.from(searchModel.simpleRefines, ([key, tag]) => [\n                refineValVnode(key, tag)\n            ])\n        ])\n    }\n\n    function complexRefinesVnodes(): m.Vnode[] {\n        return Array.from(searchModel.complexRefines, ([key, tags]) => m(\".tagRefineWrap\", [\n            refineKeyVnode(key, tags.length),\n            tags.map(tag => [refineValVnode(key, tag)])\n        ]))\n    }\n\n    function refineKeyVnode(key: string, count: number) {\n        return m(\"span\", tagRefineKeySettings(key), [\n            (key === simpleTagsHeader)\n                ? []\n                : m(\"input\", { type: \"checkbox\", checked: searchModel.refinesQuery.keys.has(key) }),\n            (expanded.has(key)) ? m(\"span\", \"▾ \") : m(\"span\", \"▿ \"),\n            m(\"span\", key),\n            m(\"span\", ` (${count})`),\n        ])\n    }\n\n    function refineValVnode(key: string, tag: TagModel) {\n        return m(\"div\", { class: `tagRefineValWrap` }, [\n            m(\"span\", tagRefineValSettings(key, tag), [\n                m(\"input\", {\n                    type: \"checkbox\", checked: (tag.val === null)\n                        ? searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                        : searchModel.refinesQuery.vals.has(tag.clean)\n                }),\n                (tag.val !== null)\n                    ? m(\"span\", `${tag.cleanVal}`)\n                    : m(\"span\", `${tag.flag}${tag.cleanKey}`),\n                m(\"span\", ` (${tag.frq})`),\n            ]),\n        ])\n    }\n\n    function tagRefineKeySettings(key: string) {\n        return {\n            class: \"roundTagKey\",\n            onclick: (event: any) => refineTagKeyOnClick(event, key),\n        }\n    }\n\n    function tagRefineValSettings(key: string, tag: TagModel) {\n        let tagClass = (tag.val === null) ? \"simpleTag\" : \"roundTagVal\"\n        let hideClass = \"hide\"\n        if (\n            (tag.val === null && expanded.has(simpleTagsHeader)) ||\n            expanded.has(key) ||\n            searchModel.refinesQuery.vals.has(tag.clean)\n        ) {\n            hideClass = \"\"\n        }\n        return {\n            class: `${tagClass} ${hideClass}`,\n            onclick: () => refineTagValOnClick(tag),\n        }\n    }\n\n    function refineTagKeyOnClick(event: any, key: string) {\n        if (!event.metaKey && !event.ctrlKey) {\n            expanded.has(key) ? expanded.delete(key) : expanded.add(key)\n        } else {\n            if (key === simpleTagsHeader) { return }\n            searchModel.refinesQuery.keys.has(key)\n                ? searchModel.refinesQuery.keys.delete(key)\n                : searchModel.refinesQuery.keys.add(key)\n        }\n    }\n\n    function refineTagValOnClick(tag: TagModel) {\n        if (tag.val === null) {\n            searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                ? searchModel.refinesQuery.simpleKeys.delete(tag.clean)\n                : searchModel.refinesQuery.simpleKeys.set(tag.clean, tag)\n        } else {\n            searchModel.refinesQuery.vals.has(tag.clean)\n                ? searchModel.refinesQuery.vals.delete(tag.clean)\n                : searchModel.refinesQuery.vals.set(tag.clean, tag)\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\r\nimport { searchModel } from \"..\"\r\nimport { Caret, ViewMode } from \"../types\"\r\nimport { caretController, textController, searchController, urlController } from \"../controllers\"\r\n\r\nexport function graphBarComponent() {\r\n    const caret: Caret = { pos: null, el: null }\r\n\r\n    function view() {\r\n        const journal = urlController.getActiveJournal()\r\n        if (journal === undefined || journal.loaded === false) return\r\n        if (journal.viewMode !== ViewMode.GRAPH) return\r\n        return m(\"#filter\", [\r\n            m(\"#graphFilter\", nodeSettings(), m.trust(searchModel.graphFilter.rendered)),\r\n            m(\"button\", clearNodeSettings(), \"x\"),\r\n        ])\r\n    }\r\n\r\n    function nodeSettings() {\r\n        return {\r\n            placeholder: \"Filter graph\",\r\n            contenteditable: \"true\",\r\n            class: `entry breakwrap`,\r\n            oninput: (event: any) => onInput(event),\r\n            onupdate: () => onUpdate(),\r\n            onkeydown: (event: any) => onKeydown(event)\r\n        }\r\n    }\r\n\r\n    function clearNodeSettings() {\r\n        return {\r\n            id: \"clearSearch\",\r\n            class: \"del\",\r\n            onclick: () => searchController.updateGraphFilterBar(\"\")\r\n        }\r\n    }\r\n\r\n    function onInput(event: any) {\r\n        let pos = caretController.getCaretPosition(event.target)\r\n        caret.pos = (pos) ? pos[1] : null\r\n        caret.el = event.target\r\n        searchController.updateGraphFilterBar(textController.escape(event.target.innerText))\r\n    }\r\n\r\n    function onUpdate() {\r\n        caretController.setCaretPosition(caret.el, caret.pos)\r\n        caret.pos = null\r\n        caret.el = null\r\n    }\r\n\r\n    function onKeydown(event: any) {\r\n        if (event.keyCode == 13 && !event.shiftKey) {\r\n            event.preventDefault()\r\n            event.target.blur()\r\n        }\r\n    }\r\n\r\n    return { view: view }\r\n}\r\n","import m from \"mithril\"\nimport { appStateModel } from \"..\"\nimport { TestMode } from \"../types\"\nimport { appStateController, urlController } from \"../controllers\"\n\nexport function testModeComponent() {\n\n    function view() {\n        if (appStateModel.testMode !== TestMode.OFF) {\n            return m(\"#testMode\", [\n                m(\"span\", `${appStateModel.testMode} active `),\n                stopDemoButton()\n            ])\n        }\n        return\n    }\n\n    function stopDemoButton() {\n        if (appStateModel.testMode === TestMode.DEMO) {\n            return m(\"button\", { onclick: () => {\n                appStateController.updateTestMode(TestMode.OFF)\n                urlController.redirect(\"/library\")\n            }, class: \"stopDemo\" }, \"Start Now\")\n        }\n        return\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { urlController } from \"../controllers\"\n\nexport function journalsComponent() {\n\n    function view() {\n        return m(\"#journals\", journalList())\n    }\n\n    function journalList() {\n        let shelf = urlController.getActiveShelf()\n        if (shelf === undefined) {\n            urlController.redirect(\"/library\")\n            return\n        }\n        return Array.from(shelf.journals.values()).map(journal => {\n            let link = `#/library/${journal.shelf.id}/${journal.id}`\n            return m(\"li\", m(\"a\", {\n                href: link,\n                id: `journal-${journal.id}`\n            }, journal.title))\n        })\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { SyncerState, TestMode } from \"../types\"\nimport { syncerController } from \"../controllers\"\nimport { syncerModel, googleModel, libraryModel, appStateModel } from \"..\"\n\nexport function syncStateComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn || libraryModel.shelves.size === 0 || appStateModel.testMode === TestMode.DEMO) return\n        return m(\"#status\", m(\"span\", syncState()))\n    }\n\n    function syncState() {\n        return m(\"span\", [\n            syncStateIcon(),\n            syncStateText(),\n            unpauseSync()\n        ])\n    }\n\n    function syncStateText() {\n        let txt = \"\"\n        let class_ = `syncState ${stateColorClass()}`\n\n        switch (syncerModel.state) {\n            case SyncerState.DOWNLOADING:\n                txt = \"Downloading journal data from drive\"\n                break\n            case SyncerState.PAUSED:\n                txt = \"Warning! - Syncing is paused\"\n                break\n            case SyncerState.SYNCED:\n                txt = \"Cloud synced\"\n                break\n            case SyncerState.UPLOADING:\n                txt = \"Uploading changes to drive\"\n                break\n            case SyncerState.INITIALIZING:\n                txt = \"Initializing\"\n        }\n        return m(\"span\", { id: \"syncStateText\", class: class_ }, txt)\n    }\n\n    function syncStateIcon() {\n        let class_ = `material-icons material-icons-outlined syncState ${stateColorClass()}`\n        return m(\"i\", { id: \"syncStateIcon\", class: class_ }, syncerModel.state)\n    }\n\n    function unpauseSync() {\n        if (syncerModel.state === SyncerState.PAUSED) {\n            return m(\"button\", {\n                id: \"unpauseSync\",\n                class: \"syncState\",\n                onclick: () => syncerController.unpause()\n            }, \"Unpause Syncing\")\n        }\n        return\n    }\n\n    function stateColorClass() {\n        switch (syncerModel.state) {\n            case SyncerState.PAUSED:\n                return \"error\"\n            case SyncerState.SYNCED:\n                return \"okay\"\n            default:\n                return \"warn\"\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { Caret, ViewMode } from \"../types\"\nimport { caretController, textController, searchController, urlController } from \"../controllers\"\nimport { JournalModel } from \"../models\"\n\n\nexport function searchbarComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#search\", [\n            m(\"#searchQuery\", searchNodeSettings(), m.trust(searchModel.barQuery.rendered)),\n            m(\"button\", clearSearchNodeSettings(), \"x\"),\n            (journal.viewMode !== ViewMode.GRAPH) ? m(\"button\", gotoGraphSettings(journal), \"graph\") : [],\n            (journal.viewMode !== ViewMode.COMPOSE) ? m(\"button\", gotoComposeSettings(journal), \"compose\") : [],\n        ])\n    }\n\n    function searchNodeSettings() {\n        return {\n            placeholder: \"Search for text or tags\",\n            contenteditable: \"true\",\n            class: `entry breakwrap`,\n            oninput: (event: any) => onInput(event),\n            onupdate: () => onUpdate(),\n            onkeydown: (event: any) => onKeydown(event)\n        }\n    }\n\n    function clearSearchNodeSettings() {\n        return {\n            id: \"clearSearch\",\n            class: \"del\",\n            onclick: () => searchController.updateSearchbar(\"\")\n        }\n    }\n\n    function onInput(event: any) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        searchController.updateSearchbar(textController.escape(event.target.innerText))\n    }\n\n    function onUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    function onKeydown(event: any) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function gotoComposeSettings(journal: JournalModel) {\n        return {\n            id: \"goToCompose\",\n            class: \"del\",\n            onclick: () => journal.viewMode = ViewMode.COMPOSE\n        }\n    }\n\n    function gotoGraphSettings(journal: JournalModel) {\n        return {\n            id: \"goToGraph\",\n            class: \"del\",\n            onclick: () => journal.viewMode = ViewMode.GRAPH\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { libraryController } from \"../controllers\"\nimport { libraryModel } from \"..\"\n\nexport function addShelvesComponent() {\n\n    let newShelfUrls = \"\"\n    let addingShelves = false\n\n    function view() {\n        return m(\"#addShelves\", [\n            addShelvesMessage(),\n            addShelvesButton(),\n            addShelvesTextbox(),\n        ])\n    }\n\n    function addShelvesMessage() {\n        if (libraryModel.shelves.size !== 0) return\n        return m(\"span\", \"Add Google Spreadsheet URLs here to get started. \")\n    }\n\n    function addShelvesButton() {\n        return m(\"button\", {\n            id: \"addShelvesButton\",\n            onclick: async () => {\n                if (addingShelves) libraryController.addShelves(newShelfUrls)\n                newShelfUrls = \"\"\n                addingShelves = !addingShelves\n            }\n        }, (addingShelves) ? \" ✓ \" : \"+/-\")\n    }\n\n    function addShelvesTextbox() {\n        if (!addingShelves) return null\n        return m(\"textarea\", {\n            id: \"addShelvesText\",\n            placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\n            oninput: (event: any) => newShelfUrls = event.target.value\n        })\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { urlController } from \"../controllers\"\n\nexport function breadcrumbComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn) return\n        return m(\"#breadcrumb\", urlController.getBreadcrumbTrail())\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { urlController } from \"../controllers\"\nimport { googleComponent } from \"../components\"\n\nexport function signinView() {\n\n    function view() {\n        return m(\"#auth\", [\n            m(googleComponent),\n        ])\n    }\n\n    function onupdate() {\n        if (googleModel.isSignedIn) {\n            urlController.redirect(\"/library\")\n        }\n    }\n\n    return {\n        view: view,\n        onupdate: onupdate,\n    }\n\n}\n","import m from \"mithril\"\nimport { \n    googleComponent, shelvesComponent, syncStateComponent, addShelvesComponent,\n    testModeComponent, errorsComponent\n} from \"../components\"\n\nexport function libraryView() {\n\n    function view() {\n        return m(\"#library\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(errorsComponent),\n            m(addShelvesComponent),\n            m(shelvesComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\nimport { urlController, journalController } from \"../controllers\"\nimport {\n    googleComponent, breadcrumbComponent, entriesComponent, syncStateComponent,\n    searchbarComponent, refinesComponent, composeComponent, testModeComponent,\n    errorsComponent, graphComponent, graphBarComponent\n} from \"../components\"\nimport { JournalModel } from \"../models\"\nimport { ViewMode } from \"../types\"\n\nexport function journalView() {\n    let journal: JournalModel | undefined = undefined\n\n    function oninit() {\n        journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded) return\n        journalController.loadEntries(journal)\n    }\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(errorsComponent),\n            m(breadcrumbComponent),\n            m(searchbarComponent),\n            m(graphBarComponent),\n            m(refinesComponent),\n            mainView(journal),\n        ])\n    }\n\n    function mainView(journal: JournalModel | undefined) {\n        if (journal === undefined || journal.loaded === false) return\n        if (journal.viewMode === ViewMode.GRAPH) {\n            return [\n                m(graphComponent),\n            ]\n        }\n        return [\n            m(\"#entriesWrap\", [\n                m(entriesComponent),\n                m(composeComponent),\n            ])\n        ]\n    }\n\n    return {\n        view: view,\n        oninit: oninit,\n    }\n\n}\n","import { urlModel } from \"..\"\nimport { TestMode } from \"../types\"\nimport { urlController, appStateController, libraryController } from \"../controllers\"\n\nexport function testModeView() {\n    function view() {\n        if (urlModel.hash.startsWith(\"#/demo\")) {\n            appStateController.updateTestMode(TestMode.DEMO)\n            libraryController.addShelves(\"https://docs.google.com/spreadsheets/d/shelf/edit\")\n            urlController.redirect(\"/library/shelf/0\")\n        }\n\n        if (urlModel.hash.startsWith(\"#/setTestMode\")) {\n            appStateController.updateTestMode(urlModel.newTestMode)\n            urlController.redirect(\"/\")\n        }\n    }\n\n    return {\n        view: view\n    }\n\n}\n"],"sourceRoot":""}