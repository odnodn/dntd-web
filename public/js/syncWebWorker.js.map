{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/types/syncer.ts","webpack:///./src/types/appState.ts","webpack:///./src/errors/SyncerError.ts","webpack:///./src/errors/FriendlyError.ts","webpack:///./src/workers/sync/syncWebWorker.ts","webpack:///./src/workers/sync/tasks/index.ts","webpack:///./src/workers/sync/tasks/ExtendSheetTask.ts","webpack:///./src/types/index.ts","webpack:///./src/errors/index.ts","webpack:///./src/workers/sync/tasks/BaseTask.ts","webpack:///./src/workers/sync/index.ts","webpack:///./src/workers/sync/typeGuards.ts","webpack:///./src/workers/sync/tasks/GetRowsTask.ts","webpack:///./src/workers/sync/tasks/CreateRowTask.ts","webpack:///./src/workers/sync/tasks/UpdateRowTask.ts","webpack:///./src/workers/sync/tasks/DeleteRowTask.ts","webpack:///./src/workers/sync/tasks/GetSpreadsheetTask.ts","webpack:///./src/workers/sync/messages.ts","webpack:///./src/types/search.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SyncerPayloadType","SyncerResponseType","SyncerState","TestMode","str","values","includes","SyncerError","Error","errorMsg","friendlyMsg","needsReAuth","pause","rejects","super","this","payload","undefined","error","type","ERROR","FriendlyError","msg","syncRate","taskFactory","TaskFactory","downloadQueue","Map","uploadQueue","pendingDownloads","testMode","OFF","token","state","SYNCED","isSynced","PAUSED","length","size","updateSyncState","newState","postSyncStateMessage","handleSyncError","id","syncerError","instanceOfSyncerError","message","postTokenRequestMessage","postMessage","workUploadQueueTasks","UPLOADING","task","work","shift","workDownloadQueueTasks","DOWNLOADING","entries","delete","then","catch","finally","sleep","ms","Promise","resolve","setTimeout","sync","onmessage","data","TEST_MODE_UPDATE","AUTH_UPDATE","UNPAUSE","createTask","async","set","push","prequeue","ExtendSheetTask","BaseTask","url","URL","spreadsheetId","opts","method","cache","headers","Authorization","body","JSON","stringify","requests","appendDimension","sheetId","dimension","response","fetch","toString","ok","json","status","CREATE_ROW","createCreateRowTask","GET_ROWS","createGetRowsTask","GET_SPREADSHEET","createGetSpreadsheetTask","UPDATE_ROW","createUpdateRowTask","DELETE_ROW","createDeleteRowTask","console","warn","GetRowsTask","MockGetRowsTask","range","sheetTitle","rows","map","row","_token","FAIL_GET_RANGE","RETURN_ROWS","CreateRowTask","MockCreateRowTask","startIndex","idx","endIndex","insertDimension","FAIL_DELETE_ROW","UpdateRowTask","MockUpdateRowTask","params","valueInputOption","keys","forEach","searchParams","append","majorDimension","content","extendSheetTask","EXTEND_SHEET","FAIL_UPDATE_RANGE","DeleteRowTask","MockDeleteRowTask","startRowIndex","endRowIndex","startColumnIndex","deleteRange","shiftDimension","GetSpreadsheetTask","MockGetSpreadsheetTask","spreadsheet","FAIL_GET_SPREADSHEET_SHEETS","SYNC_STATE","TOKEN_REQUEST","SearchType"],"mappings":"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","file":"syncWebWorker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","import { TestMode } from \".\"\n\nexport type SyncerPayload = (\n    GetRowsPayload | GetSpreadsheetPayload | UpdateRowPayload |\n    ExtendSheetPayload | DeleteRowPayload | TestModeUpdatePayload |\n    AuthUpdatePayload | UnpausePayload | SyncStatePayload | ErrorPayload |\n    TokenRequestPayload | CreateRowPayload\n)\n\nexport enum SyncerPayloadType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    TEST_MODE_UPDATE,\n    UNPAUSE,\n    GET_SPREADSHEET,\n    EXTEND_SHEET,\n    CREATE_ROW,\n    MOVE_ROW,\n    ERROR,\n    TOKEN_REQUEST,\n    SYNC_STATE,\n}\n\nexport enum SyncerResponseType {\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n    INITIALIZING = \"cloud_queue\",\n}\n\nexport interface TestModeUpdatePayload {\n    type: SyncerPayloadType.TEST_MODE_UPDATE\n    testMode: TestMode\n    rejects: boolean\n}\n\nexport interface AuthUpdatePayload {\n    type: SyncerPayloadType.AUTH_UPDATE\n    token: string\n    rejects: boolean\n}\n\nexport interface UnpausePayload {\n    type: SyncerPayloadType.UNPAUSE\n    rejects: boolean\n}\n\nexport interface DeleteRowPayload {\n    type: SyncerPayloadType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    rejects: boolean\n}\n\nexport interface CreateRowPayload {\n    type: SyncerPayloadType.CREATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    rejects: boolean\n}\n\nexport interface ExtendSheetPayload {\n    type: SyncerPayloadType.EXTEND_SHEET\n    spreadsheetId: string\n    sheetId: number\n    rejects: boolean\n}\n\nexport interface UpdateRowPayload {\n    type: SyncerPayloadType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n    rejects: boolean\n}\n\nexport interface GetSpreadsheetPayload {\n    type: SyncerPayloadType.GET_SPREADSHEET\n    spreadsheetId: string\n    spreadsheet?: gapi.client.sheets.Spreadsheet\n    rejects: boolean\n}\n\nexport interface GetRowsPayload {\n    type: SyncerPayloadType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    rows: string[]\n    rejects: boolean\n}\n\nexport interface SyncStatePayload {\n    type: SyncerPayloadType.SYNC_STATE\n    length: number\n    state: SyncerState\n    rejects: boolean\n}\n\nexport interface ErrorPayload {\n    type: SyncerPayloadType.ERROR\n    error: Error\n    pause: boolean\n    friendlyMsg: string\n    rejects: boolean\n}\n\nexport interface TokenRequestPayload {\n    type: SyncerPayloadType.TOKEN_REQUEST\n    rejects: boolean\n}\n","export enum TestMode {\r\n    OFF = \"0\",\r\n    WORKING = \"1\",\r\n    FAIL_GET_SPREADSHEET_SHEETS = \"2\",\r\n    FAIL_GET_RANGE = \"3\",\r\n    FAIL_UPDATE_RANGE = \"4\",\r\n    FAIL_DELETE_ROW = \"5\",\r\n    RETURN_ROWS = \"6\",\r\n    DEMO = \"demomode\"\r\n}\r\n\r\nexport function instanceOfTestMode(str: string): str is TestMode {\r\n    return ((<any>Object).values(TestMode).includes(str))\r\n}\r\n","import { ErrorPayload, SyncerPayloadType } from \"../types\"\n\nexport class SyncerError extends Error {\n    public payload: ErrorPayload\n\n    constructor(errorMsg: string, public friendlyMsg: string, public needsReAuth: boolean, pause?: boolean, rejects?: boolean) {\n        super(errorMsg)\n        this.payload = {\n            pause: (pause !== undefined) ? pause : true,\n            error: this,\n            friendlyMsg: this.friendlyMsg,\n            type: SyncerPayloadType.ERROR,\n            rejects: (rejects !== undefined) ? rejects : false,\n        }\n    }\n}\n","export class FriendlyError extends Error {\n    public msg: string\n    public friendlyMsg: string\n\n    constructor(errorMsg: string, friendlyMsg: string) {\n        super(errorMsg)\n        this.msg = errorMsg\n        this.friendlyMsg = friendlyMsg\n    }\n}\n","import { instanceOfSyncerError } from \".\"\nimport { SyncerError } from \"../../errors\"\nimport { TaskFactory, BaseTask } from \"./tasks\"\nimport { postTokenRequestMessage, postSyncStateMessage } from \"./messages\"\nimport { SyncerState, SyncerPayload, TestMode, SyncerPayloadType } from \"../../types\"\n\nexport const syncRate = 250 // ms\nconst taskFactory = new TaskFactory()\nconst downloadQueue: Map<string, BaseTask<SyncerPayload>> = new Map()\nconst uploadQueue: { id: string, task: BaseTask<SyncerPayload> }[] = []\n\nlet pendingDownloads = 0\nlet testMode: TestMode = TestMode.OFF\nlet token: string | undefined = undefined\nlet state: SyncerState = SyncerState.SYNCED\n\nsync()\nonmessage = (msg) => prequeue(msg)\n\nfunction prequeue(msg: MessageEvent) {\n    const { id, payload }: { id: string, payload: SyncerPayload } = msg.data\n\n    switch (payload.type) {\n        case SyncerPayloadType.TEST_MODE_UPDATE:\n            testMode = payload.testMode\n            if (testMode !== TestMode.OFF) token = \"mock\"\n            return\n        case SyncerPayloadType.AUTH_UPDATE:\n            token = payload.token\n            return\n        case SyncerPayloadType.UNPAUSE:\n            updateSyncState(SyncerState.UPLOADING)\n            return\n    }\n\n    let task = taskFactory.createTask(payload, testMode)\n    if (task === undefined) return\n\n    if (task.async) {\n        downloadQueue.set(id, task)\n    } else {\n        uploadQueue.push({ id, task })\n    }\n}\n\nasync function sync() {\n    while (true) {\n        await sleep(syncRate)\n        if (isSynced()) updateSyncState(SyncerState.SYNCED)\n        workDownloadQueueTasks()\n        await workUploadQueueTasks()\n    }\n}\n\nfunction isSynced() {\n    if (\n        state !== SyncerState.PAUSED &&\n        state !== SyncerState.SYNCED &&\n        uploadQueue.length + downloadQueue.size + pendingDownloads === 0\n    ) {\n        return true\n    }\n    return false\n}\n\nfunction updateSyncState(newState?: SyncerState) {\n    if (newState !== undefined && state !== newState) {\n        state = newState\n        postSyncStateMessage(uploadQueue.length, state)\n    }\n}\n\nfunction handleSyncError(error: Error | SyncerError, id: string) {\n    let syncerError: SyncerError = (instanceOfSyncerError(error)\n        ? error\n        : new SyncerError(error.message, \"Unknown Error\", false))\n\n    if (syncerError.needsReAuth) {\n        postTokenRequestMessage()\n        token = undefined\n        return\n    } else {\n        if (syncerError.payload.pause) updateSyncState(SyncerState.PAUSED)\n        postMessage({ id, error: syncerError.payload })\n    }\n}\n\nasync function workUploadQueueTasks() {\n    while (uploadQueue.length !== 0 && token && state !== SyncerState.PAUSED) {\n        updateSyncState(SyncerState.UPLOADING)\n        let { id, task } = uploadQueue[0]\n        try {\n            let payload = await task.work(token)\n            postMessage({ id, payload })\n            uploadQueue.shift()\n        } catch (error) {\n            handleSyncError(error, id)\n        }\n    }\n}\n\nfunction workDownloadQueueTasks() {\n    if (downloadQueue.size === 0 || !token || state === SyncerState.PAUSED) return\n    updateSyncState(SyncerState.DOWNLOADING)\n    for (let [id, task] of downloadQueue.entries()) {\n        pendingDownloads += 1\n        downloadQueue.delete(id)\n        task.work(token)\n            .then((payload: SyncerPayload) => postMessage({ id, payload }))\n            .catch((error: SyncerError) => handleSyncError(error, id))\n            .finally(() => pendingDownloads -= 1)\n    }\n}\n\nfunction sleep(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n","export * from \"./BaseTask\"\nexport * from \"./GetRowsTask\"\nexport * from \"./CreateRowTask\"\nexport * from \"./UpdateRowTask\"\nexport * from \"./DeleteRowTask\"\n// export * from \"./MoveRowTask\"\nexport * from \"./ExtendSheetTask\"\nexport * from \"./GetSpreadsheetTask\"","import { BaseTask } from \"./BaseTask\"\nimport { ExtendSheetPayload } from \"../../../types\"\nimport { SyncerError, GapiErrorResponse } from \"../../../errors\"\n\nexport class ExtendSheetTask<P extends ExtendSheetPayload> extends BaseTask<P> {\n    constructor(payload: P) {\n        super(payload)\n    }\n\n    public async work(token: string): Promise<P> {\n        let extendSheetLength = 100\n        let url = new URL(`https://sheets.googleapis.com/v4/spreadsheets/${this.payload.spreadsheetId}:batchUpdate`)\n        let headers = { Authorization: `Bearer ${token}` }\n        let body = JSON.stringify({ requests: [{ appendDimension: { sheetId: this.payload.sheetId, dimension: \"ROWS\", length: extendSheetLength } }] })\n        let opts: RequestInit = { method: \"POST\", mode: \"cors\", cache: \"no-cache\", headers: headers, body: body }\n        let response = await fetch(url.toString(), opts)\n        if (!response.ok) {\n            let error: GapiErrorResponse = await response.json()\n            throw new SyncerError(JSON.stringify(error), \"Failed to extend Google Sheet\", response.status === 401)\n        }\n        return this.payload\n    }\n}\n","export * from \"./caret\"\nexport * from \"./search\"\nexport * from \"./syncer\"\nexport * from \"./appState\"\n","export * from \"./GapiErrors\"\nexport * from \"./SyncerError\"\nexport * from \"./FriendlyError\"\n","import { SyncerPayload, TestMode, SyncerPayloadType } from \"../../../types\"\nimport {\n    createGetRowsTask, createGetSpreadsheetTask, createDeleteRowTask,\n    createUpdateRowTask, createCreateRowTask\n} from \".\"\n\nexport class TaskFactory {\n    public createTask(payload: SyncerPayload, testMode: TestMode): BaseTask<SyncerPayload> | undefined {\n        switch(payload.type) {\n            case SyncerPayloadType.CREATE_ROW:\n                return createCreateRowTask(payload, testMode)\n            case SyncerPayloadType.GET_ROWS:\n                return createGetRowsTask(payload, testMode)\n            case SyncerPayloadType.GET_SPREADSHEET:\n                return createGetSpreadsheetTask(payload, testMode)\n            case SyncerPayloadType.UPDATE_ROW:\n                return createUpdateRowTask(payload, testMode)\n            case SyncerPayloadType.DELETE_ROW:\n                return createDeleteRowTask(payload, testMode)\n            // TODO - NICE TO HAVE\n            // case SyncerPayloadType.MOVE_ROW:\n            //     return undefined\n            default:\n                console.warn(\"Task factory told to build unsupported task\")\n                return undefined\n        }\n        return\n    }\n\n}\n\nexport abstract class BaseTask<P extends SyncerPayload> {\n    public payload: P\n    public async: boolean | undefined\n    public testMode: TestMode = TestMode.OFF\n\n    constructor(payload: P, testMode?: TestMode) {\n        this.payload = payload\n        this.testMode = (testMode !== undefined) ? testMode : this.testMode\n    }\n\n    public abstract work(token: string): Promise<P>\n}\n","export * from \"./typeGuards\"\nexport * from \"./syncWebWorker\"\n","import { SyncerError } from \"../../errors\"\n\nexport function instanceOfSyncerError(error: Error | SyncerError): error is SyncerError {\n    return \"needsReAuth\" in error\n}\n","import { BaseTask } from \"./BaseTask\"\nimport { GetRowsPayload, TestMode } from \"../../../types\"\nimport { SyncerError, GapiErrorResponse } from \"../../../errors\"\n\nexport function createGetRowsTask<P extends GetRowsPayload>(payload: P, testMode: TestMode): BaseTask<P> {\n    return (testMode === TestMode.OFF)\n        ? new GetRowsTask(payload)\n        : new MockGetRowsTask(payload, testMode)\n}\n\nexport class GetRowsTask<P extends GetRowsPayload> extends BaseTask<P> {\n    constructor(payload: P) {\n        super(payload)\n        this.async = true\n    }\n\n    public async work(token: string): Promise<P> {\n        let range = `${this.payload.sheetTitle}!A:A`\n        let url = `https://sheets.googleapis.com/v4/spreadsheets/${this.payload.spreadsheetId}/values/${range}`\n        let headers = { Authorization: `Bearer ${token}` }\n        let opts: RequestInit = { method: \"GET\", cache: \"no-cache\", headers: headers }\n        let response = await fetch(url, opts)\n        if (!response.ok) {\n            let error: GapiErrorResponse = await response.json()\n            throw new SyncerError(JSON.stringify(error), `Failed to load entries from ${this.payload.spreadsheetId}`, response.status === 401, true, true)\n        } else {\n            let data: gapi.client.sheets.ValueRange = await response.json()\n            this.payload.rows = (data.values) ? data.values.map(row => row[0]) : []\n        }\n        return this.payload\n    }\n}\n\nexport class MockGetRowsTask<P extends GetRowsPayload> extends BaseTask<P> {\n    constructor(payload: P, testMode: TestMode) {\n        super(payload, testMode)\n        this.async = true\n    }\n\n    public async work(_token: string): Promise<P> {\n        if (this.testMode === TestMode.FAIL_GET_RANGE) {\n            let error = new Error(\"mock fail\")\n            throw new SyncerError(JSON.stringify(error), `Failed to load entries from ${this.payload.spreadsheetId}`, false, true, true)\n        }\n        if (this.testMode === TestMode.RETURN_ROWS) {\n            this.payload.rows = [\"aaa\", \"bbb\", \"ccc\", \"@tag\", \"@key:value\"]\n        }\n        return this.payload\n    }\n}\n","import { BaseTask } from \"./BaseTask\"\nimport { CreateRowPayload, TestMode } from \"../../../types\"\nimport { SyncerError, GapiErrorResponse } from \"../../../errors\"\n\nexport function createCreateRowTask<P extends CreateRowPayload>(payload: P, testMode: TestMode): BaseTask<P> | undefined {\n    return (testMode === TestMode.OFF)\n        ? new CreateRowTask(payload)\n        : new MockCreateRowTask(payload, testMode)\n}\n\nexport class CreateRowTask<P extends CreateRowPayload> extends BaseTask<P> {\n    constructor(payload: P) {\n        super(payload)\n    }\n\n    public async work(token: string): Promise<P> {\n        let range = { sheetId: this.payload.sheetId, startIndex: this.payload.idx, endIndex: this.payload.idx + 1, dimension: \"ROWS\" }\n        let url = new URL(`https://sheets.googleapis.com/v4/spreadsheets/${this.payload.spreadsheetId}:batchUpdate`)\n        let headers = { Authorization: `Bearer ${token}` }\n        let body = JSON.stringify({ requests: [{ insertDimension: { range: range } }] })\n        let opts: RequestInit = { method: \"POST\", cache: \"no-cache\", headers: headers, body: body }\n        let response = await fetch(url.toString(), opts)\n        if (!response.ok) {\n            let error: GapiErrorResponse = await response.json()\n            throw new SyncerError(JSON.stringify(error), \"Failed to create new entry\", response.status === 401)\n        }\n        return this.payload\n    }\n}\n\nexport class MockCreateRowTask<P extends CreateRowPayload> extends BaseTask<P> {\n    constructor(payload: P, testMode: TestMode) {\n        super(payload, testMode)\n    }\n\n    public async work(_token: string): Promise<P> {\n        if (this.testMode === TestMode.FAIL_DELETE_ROW) {\n            let error = new Error(\"mock fail\")\n            throw new SyncerError(JSON.stringify(error), \"Failed to create new entry\", false)\n        }\n        return this.payload\n    }\n}\n","import { BaseTask } from \"./BaseTask\"\nimport { ExtendSheetTask } from \"./ExtendSheetTask\"\nimport { SyncerError, GapiErrorResponse } from \"../../../errors\"\nimport { UpdateRowPayload, SyncerPayload, TestMode, SyncerPayloadType } from \"../../../types\"\n\nexport function createUpdateRowTask<P extends UpdateRowPayload>(payload: P, testMode: TestMode): BaseTask<P> | undefined {\n    return (testMode === TestMode.OFF)\n        ? new UpdateRowTask(payload)\n        : new MockUpdateRowTask(payload, testMode)\n}\n\nexport class UpdateRowTask<P extends UpdateRowPayload> extends BaseTask<P> {\n    constructor(payload: P) {\n        super(payload)\n    }\n\n    public async work(token: string): Promise<P> {\n        let range = `${this.payload.sheetTitle}!A${this.payload.idx + 1}:A${this.payload.idx + 1}`\n        let url = new URL(`https://sheets.googleapis.com/v4/spreadsheets/${this.payload.spreadsheetId}/values/${range}`)\n        let headers = { Authorization: `Bearer ${token}` }\n        let params: Record<string, string> = { valueInputOption: \"RAW\" }\n        Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\n        let body = JSON.stringify({ range: range, majorDimension: \"ROWS\", values: [[this.payload.content]] })\n        let opts: RequestInit = { method: \"PUT\", cache: \"no-cache\", headers: headers, body: body }\n        let response = await fetch(url.toString(), opts)\n        let data = await response.json()\n        if (!response.ok) {\n            if (data.error.message.includes(\"exceeds grid limits\")) {\n                let extendSheetTask: SyncerPayload = {\n                    type: SyncerPayloadType.EXTEND_SHEET,\n                    spreadsheetId: this.payload.spreadsheetId,\n                    sheetId: this.payload.sheetId,\n                    rejects: false,\n                }\n                await new ExtendSheetTask(extendSheetTask).work(token)\n                let secondResponse = await fetch(url.toString(), opts)\n                if (!secondResponse.ok) {\n                    let error: GapiErrorResponse = await response.json()\n                    throw new SyncerError(JSON.stringify(error), \"Failed to update entry\", response.status === 401)\n                } else {\n                    return this.payload\n                }\n            }\n            throw new SyncerError(JSON.stringify(data), \"Failed to update entry\", response.status === 401)\n        }\n        return this.payload\n    }\n}\n\nexport class MockUpdateRowTask<P extends UpdateRowPayload> extends BaseTask<P> {\n    constructor(payload: P, testMode: TestMode) {\n        super(payload, testMode)\n    }\n\n    public async work(): Promise<P> {\n        if (this.testMode === TestMode.FAIL_UPDATE_RANGE) {\n            let error = new Error(\"mock fail\")\n            throw new SyncerError(JSON.stringify(error), \"Failed to update entry\", false)\n        }\n        return this.payload\n    }\n}\n","import { BaseTask } from \"./BaseTask\"\nimport { DeleteRowPayload, TestMode } from \"../../../types\"\nimport { SyncerError, GapiErrorResponse } from \"../../../errors\"\n\nexport function createDeleteRowTask<P extends DeleteRowPayload>(payload: P, testMode: TestMode): BaseTask<P> | undefined {\n    return (testMode === TestMode.OFF)\n        ? new DeleteRowTask(payload)\n        : new MockDeleteRowTask(payload, testMode)\n}\n\nexport class DeleteRowTask<P extends DeleteRowPayload> extends BaseTask<P> {\n    constructor(payload: P) {\n        super(payload)\n    }\n\n    public async work(token: string): Promise<P> {\n        let range = { sheetId: this.payload.sheetId, startRowIndex: this.payload.idx, endRowIndex: this.payload.idx + 1, startColumnIndex: 0 }\n        let url = new URL(`https://sheets.googleapis.com/v4/spreadsheets/${this.payload.spreadsheetId}:batchUpdate`)\n        let headers = { Authorization: `Bearer ${token}` }\n        let body = JSON.stringify({ requests: [{ deleteRange: { range: range, shiftDimension: \"ROWS\" } }] })\n        let opts: RequestInit = { method: \"POST\", cache: \"no-cache\", headers: headers, body: body }\n        let response = await fetch(url.toString(), opts)\n        if (!response.ok) {\n            let error: GapiErrorResponse = await response.json()\n            throw new SyncerError(JSON.stringify(error), \"Failed to delete entry\", response.status === 401)\n        }\n        return this.payload\n    }\n}\n\nexport class MockDeleteRowTask<P extends DeleteRowPayload> extends BaseTask<P> {\n    constructor(payload: P, testMode: TestMode) {\n        super(payload, testMode)\n    }\n\n    public async work(_token: string): Promise<P> {\n        if (this.testMode === TestMode.FAIL_DELETE_ROW) {\n            let error = new Error(\"mock fail\")\n            throw new SyncerError(JSON.stringify(error), \"Failed to delete entry\", false)\n        }\n        return this.payload\n    }\n}\n","import { BaseTask } from \"./BaseTask\"\nimport { GetSpreadsheetPayload, TestMode } from \"../../../types\"\nimport { SyncerError, GapiErrorResponse } from \"../../../errors\"\n\nexport function createGetSpreadsheetTask<P extends GetSpreadsheetPayload>(payload: P, testMode: TestMode): BaseTask<P> | undefined {\n    return (testMode === TestMode.OFF)\n        ? new GetSpreadsheetTask(payload)\n        : new MockGetSpreadsheetTask(payload, testMode)\n}\n\nexport class GetSpreadsheetTask<P extends GetSpreadsheetPayload> extends BaseTask<P> {\n    constructor(payload: P) {\n        super(payload)\n        this.async = true\n    }\n\n    public async work(token: string): Promise<P> {\n        let url = `https://sheets.googleapis.com/v4/spreadsheets/${this.payload.spreadsheetId}`\n        let headers = { Authorization: `Bearer ${token}` }\n        let opts: RequestInit = { method: \"GET\", cache: \"no-cache\", headers: headers }\n        let response = await fetch(url, opts)\n        if (!response.ok) {\n            let error: GapiErrorResponse = await response.json()\n            throw new SyncerError(JSON.stringify(error), `Could not get spreadsheet information for ${this.payload.spreadsheetId}`, response.status === 401, false, true)\n        } else {\n            this.payload.spreadsheet = await response.json()\n        }\n        return this.payload\n    }\n}\n\nexport class MockGetSpreadsheetTask<P extends GetSpreadsheetPayload> extends BaseTask<P> {\n    constructor(payload: P, testMode: TestMode) {\n        super(payload, testMode)\n        this.async = true\n    }\n\n    public async work(_token: string): Promise<P> {\n        if (this.testMode === TestMode.FAIL_GET_SPREADSHEET_SHEETS) {\n            let error = new Error(\"mock fail\")\n            throw new SyncerError(JSON.stringify(error), `Could not get spreadsheet information for ${this.payload.spreadsheetId}`, false, false, true)\n        }\n        this.payload.spreadsheet = {\n            \"spreadsheetId\": this.payload.spreadsheetId,\n            \"spreadsheetUrl\": `https://docs.google.com/spreadsheets/d/${this.payload.spreadsheetId}/edit`,\n            \"properties\": {\n                \"title\": \"Mock Journal\",\n            },\n            \"sheets\": [\n                {\n                    \"properties\": {\n                        \"sheetId\": 0,\n                        \"title\": \"Sheet1\",\n                    }\n                },\n                {\n                    \"properties\": {\n                        \"sheetId\": 1124780423,\n                        \"title\": \"Sheet2\",\n                    }\n                },\n                {\n                    \"properties\": {\n                        \"sheetId\": 1286561930,\n                        \"title\": \"Sheet3\",\n                    }\n                }\n            ]\n        }\n        return this.payload\n    }\n}","import { SyncerPayload, SyncerPayloadType, SyncerState } from \"../../types\"\n\nexport function postSyncStateMessage(length: number, state: SyncerState) {\n    postResponse({\n        length: length,\n        state: state,\n        type: SyncerPayloadType.SYNC_STATE,\n        rejects: false,\n    })\n}\n\nexport function postTokenRequestMessage() {\n    postMessage({ type: SyncerPayloadType.TOKEN_REQUEST })\n}\n\nfunction postResponse(payload: SyncerPayload) {\n    postMessage({payload})\n}\n","export enum SearchType {\n    NONE,\n    AND,\n    OR,\n}\n"],"sourceRoot":""}